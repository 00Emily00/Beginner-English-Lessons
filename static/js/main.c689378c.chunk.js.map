{"version":3,"sources":["food.mov","introduction-2.mp4","images/apple.png","components/UI/Card/index.js","components/BlogPost/index.js","containers/Home/index.js","components/Logo/index.js","components/Navbar/index.js","components/Hero/index.js","containers/ContactUs/index.js","components/Sidebar/index.js","containers/Post/index.js","components/GreetingPost/index.js","components/GreetingNavbar/index.js","containers/Greeting/index.js","components/CommonPhrasePost/index.js","components/CommonPhraseNavbar/index.js","containers/CommonPhrase/index.js","components/FoodPost/index.js","components/FoodNavbar/index.js","containers/FoodQ/quiz.jsx","components/FoodQuiz/Core2.jsx","components/FoodQuiz/Locale2.jsx","components/FoodQuiz/Quiz2.jsx","containers/Food/index.js","components/PeoplePost/index.js","components/PeopleNavbar/index.js","containers/People/index.js","containers/PhraseQ/quiz.jsx","components/PhraseQuiz/Core1.jsx","components/PhraseQuiz/Locale2.jsx","components/PhraseQuiz/Quiz1.jsx","containers/PhraseQ/index.js","containers/AlphabetQ/quiz.jsx","components/AlphabetQuiz/Core.jsx","components/AlphabetQuiz/Locale.jsx","components/AlphabetQuiz/Quiz.jsx","containers/AllQuizes/index.js","containers/FoodQ/index.js","containers/GreetingQ/quiz.jsx","components/GreetingQuiz/Core.jsx","components/GreetingQuiz/Locale.jsx","components/GreetingQuiz/Quiz.jsx","containers/GreetingQ/index.js","containers/PeopleQ/quiz.jsx","components/PeopleQuiz/Core3.jsx","components/PeopleQuiz/Locale3.jsx","components/PeopleQuiz/Quiz3.jsx","containers/PeopleQ/index.js","containers/AlphabetQ/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Card","props","className","style","width","children","BlogPost","useState","id","lowerLetter","upperLetter","pronunciation","audio","img","post","setPost","useEffect","postId","match","params","console","log","blogPost","alphabet","find","data-flickr-embed","href","title","src","height","alt","async","charset","frameborder","Home","controls","vid","type","Logo","Navbar","to","Hero","padding","ContactUS","Sidebar","posts","setPosts","map","key","Post","GreetingPost","wordE","wordS","greeting","GreetingNavbar","Greeting","CommonPhrasePost","commonPhrase","CommonPhraseNavbar","CommonPhrase","FoodPost","food","audioTune","Audio","playInLoop","load","loop","FoodNavbar","quiz5","Core","checkAnswer","index","correctAnswer","answerSelectionType","state","correct","incorrect","currentQuestionIndex","continueTillCorrect","userInput","userAttempt","showNextQuestionButton","undefined","push","indexOf","disabledAll","0","disabled","1","2","3","setState","prevState","buttons","Object","assign","incorrectAnswer","maxNumberOfMultipleSelection","length","includes","cnt","i","nextQuestion","initState","questions","endQuiz","renderMessageforCorrectAnswer","question","messageForCorrectAnswer","renderMessageforIncorrectAnswer","messageForIncorrectAnswer","renderExplanation","isResultPage","explanation","handleChange","event","filteredValue","target","value","renderQuizResultFilter","appLocale","onChange","resultFilterAll","resultFilterCorrect","resultFilterIncorrect","renderAnswerInResult","userInputIndex","answerBtnCorrectClassName","answerBtnIncorrectClassName","answers","questionType","answer","renderQuizResultQuestions","filter","input","dangerouslySetInnerHTML","rawMarkup","questionIndex","questionPic","renderTags","data","sanitizer","dompurify","sanitize","__html","marked","renderAnswers","onClick","buttonClasses","showDefaultResult","onComplete","customResultPage","showInstantFeedback","numberOfSelection","this","singleSelectionTagText","multipleSelectionTagText","pickNumberOfSelection","replace","totalPoints","correctPoints","point","String","parseInt","questionSummary","numberOfQuestions","numberOfCorrectAnswers","numberOfIncorrectAnswers","nextQuestionBtn","resultPageHeaderText","resultPagePoint","Component","defaultLocale","Quiz","start","shuffleQuestions","j","Math","floor","random","validateQuiz","quiz","error","Array","isArray","warn","bind","shuffle","quizTitle","landingHeaderText","quizSynopsis","startQuizBtn","Food","trigger","position","PeoplePost","people","PeopleNavbar","People","quiz3","Quiz1","quiz6","AllQuizes","Quiz2","thing","quiz2","Quiz3","App","path","exact","component","AlphabetNav","AlphabetQ","GreetingNav","GreetingQ","PhraseNav","FoodNav","FoodQ","PeopleNav","PeopleQ","PhraseQ","allQs","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.c689378c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/food.fac7e654.mov\";","module.exports = __webpack_public_path__ + \"static/media/introduction-2.857e8fe9.mp4\";","module.exports = __webpack_public_path__ + \"static/media/apple.cff7015f.png\";","import React from \"react\";\nimport './style.css';\n\n/**\n * @author\n * @function Card\n */\nconst Card = (props) => {\n  return (\n    <div className=\"card\" style={{width:props.width?props.width:'100%'}}{...props}>\n        {props.children}\n    </div>\n  );\n};\n\nexport default Card;","import React, {useState,useEffect}from 'react';\nimport './style.css';\nimport Card from '../UI/Card';\nimport blogPost from '../../data/info.json';\nimport { NavLink } from \"react-router-dom/cjs/react-router-dom.min\";\nimport a from '../../images/apple.png';\n\n/**\n * @author\n * @function BlogPost\n */\n\nconst BlogPost = props => {\n\n    // const settings = {\n    //     dots: true,\n    //     infinite: true,\n    //     speed: 500,\n    //     slidesToShow: 1,\n    //     slidesToScroll: 1\n    //   };\n    const[post,setPost] = useState({\n        id : \"\",\n        lowerLetter : \"\",\n        upperLetter : \"\",\n        pronunciation : \"\",\n        audio : \"\",\n        img : \"\"\n    });\n    const[postId, setPostId] = useState(''); //initialization\n\n    //useEffect is when you do an action\n    useEffect(() => {\n        const postId = props.match.params.postId;\n        console.log(postId + \"This is the post Id stuff...First\");\n        const post = blogPost.alphabet.find(post => post.id == postId);\n        console.log(post + \" This is the post variable...Second\");\n        setPost(post);\n        console.log(post + \" This is the post variable after setpost...Third\");\n        // setPostId(postId); //change page to the posts\n        console.log(postId + \" This is the post variable...Fourth\");\n    },[post,props.match.params.postId]); //make that call only once\n\n\n    \n    // if(post.blogImage==\"\")return null;\n        return(\n          <div className=\"blogPostContainer\">\n            <h1>El Alfabeto y Pronunciacion</h1>\n            <Card>\n                { <div className=\"postContent\">\n                    <h1>{post.upperLetter}{post.lowerLetter}</h1>\n                    <h2>{post.pronunciation}</h2>\n                <a data-flickr-embed=\"true\"href=\"https://www.flickr.com/photos/160063694@N06/50112995828/in/dateposted-public/\" title=\"apple\"><img src={post.img} width=\"200\" height=\"300\" alt=\"apple\"/></a><script async src=\"//embedr.flickr.com/assets/client-code.js\" charset=\"utf-8\"></script>\n                    <div className=\"iframe-div\">\n                    <iframe src={post.audio} frameborder=\"0\"></iframe>\n                    </div>\n                </div> }\n            </Card>\n\n          </div>\n\n          \n    );\n           // }\n}\n\nexport default BlogPost;","import React, {useEffect, useState} from 'react';\nimport './style.css';\nimport BlogPost from '../../components/BlogPost';\nimport blogPost from '../../data/info.json';\nimport vid from '../../../src/introduction-2.mp4'\nimport Popup from \"reactjs-popup\";\n\nconst Home = props => {\n    return(\n        <div>\n            {/* <Popup trigger={<button> Trigger</button>} position=\"right center\"> */}\n            <video controls>\n                <source src={vid} type=\"video/mp4\"/>\n            </video>  \n            {/* </Popup> */}\n            {/* <video controls>\n                <source src={vid} type=\"video/mp4\"/>\n            </video>\n                   */}\n        </div>\n    );\n}\n\nexport default Home;","import React from \"react\";\nimport './style.css';\n\n/**\n * @author\n * @function Logo\n */\nconst Logo = (props) => {\n  return (\n    <div className=\"logo\">\n    <a href=\"#\">Ingles con Barrera</a>\n    </div>\n  );\n};\n\nexport default Logo;","import React, {useState} from \"react\";\nimport {NavLink} from 'react-router-dom';\nimport './style.css';\n\n/**\n * @author\n * @function Navbar\n */\nconst Navbar = (props) => {\n\n    const[search, setSearch] = useState(false);\n\n    const submitSearch = (e) => {\n        e.preventDefault();\n        alert('Searched');\n    }\n    const openSearch = () => {\n        setSearch(true);\n    }\n    const searchClass = search?'searchinput active':'searchinput';\n  return (\n    <div className=\"navbar\">\n        <ul className=\"navbarMenu\">\n        <li className=\"home\"><NavLink to=\"/\">Home</NavLink></li>\n        {/* <li className=\"about-us\"><NavLink to=\"/about-us\">About Us</NavLink></li> */}\n        <li className=\"lessons\"><NavLink to=\"/post\">Alphabet</NavLink></li>\n        <li className=\"alphabetQ\"><NavLink to=\"/alphabetQuiz\">Alphabet Quiz</NavLink></li>\n        {/* <li className=\"contact-us\"><NavLink to=\"/contact-us\">Contact Us</NavLink></li> */}\n        <li className=\"greetings\"><NavLink to=\"/greeting\">Greetings</NavLink></li>\n        <li className=\"greetingsQ\"><NavLink to=\"/greetingQuiz\">Greetings Quiz</NavLink></li>\n        <li className=\"common-phrases\"><NavLink to=\"/commonphrase\">Common Phrase</NavLink></li>\n        <li className=\"common-phrasesQ\"><NavLink to=\"/commonphraseQuiz\">Common Phrase Quiz</NavLink></li>\n        <li className=\"food\"><NavLink to=\"/food\">Food</NavLink></li>\n        <li className=\"foodQ\"><NavLink to=\"/foodQuiz\">Food Quiz</NavLink></li>\n        <li className=\"people\"><NavLink to=\"/people\">People</NavLink></li>\n        <li className=\"peopleQ\"><NavLink to=\"/peopleQuiz\">People Quiz</NavLink></li>\n        {/* <li className=\"quiz\"><NavLink to=\"/quizes\">Quizes</NavLink></li> */}\n        {/* <li className=\"phrases-quiz\"><NavLink to=\"/quizPhrase\">Phrases Quiz</NavLink></li> */}\n        <li className=\"all-quizes\"><NavLink to=\"/all-quizes\">All quizzes</NavLink></li>\n        </ul>\n\n    </div>\n  );\n};\n\nexport default Navbar;","import React from \"react\";\nimport './style.css';\nimport Card from \"../UI/Card\";\nimport Logo from \"../Logo\";\nimport Navbar from \"../Navbar\";\n\n/**\n * @author\n * @function Hero\n */\nconst Hero = (props) => {\n  return (\n    <div>\n        <Card>\n            <div style={{padding: '50px 0'}}>\n           <Logo/> \n           </div>\n           <Navbar/>\n        </Card>\n    </div>\n  );\n};\n\nexport default Hero;\n","import React from 'react';\nimport './style.css';\n\n/**\n * @author\n * @function ContactUS\n */\nconst ContactUS = props => {\n    return(\n        <div>\n            ContactUS\n        </div>\n    );\n}\n\nexport default ContactUS;","import React,{useState,useEffect} from \"react\";\nimport \"./style.css\";\nimport Card from \"../UI/Card\";\nimport blogPost from '../../data/info.json';\nimport { NavLink } from \"react-router-dom/cjs/react-router-dom.min\";\n/**\n * @author\n * @function Sidebar\n */\nconst Sidebar = props => {\n\n  const[posts,setPosts] = useState([]);\n\n  useEffect(() => {\n      const posts = blogPost.alphabet;\n      setPosts(posts);\n  },[posts]); //make that call only once\n\n\n  return (\n    <div className=\"s\">\n      {/* <Card style={{marginBottom:'20px',padding:'20px', boxSizing:'border-box'}}> */}\n      <div className=\"slider\">\n          {/* <span>Recent Posts</span> */}\n        </div>\n\n         <div className=\"slides\">\n         {\n           posts.map(post=>{\n            return (\n              <NavLink key={post.id} to={`/post/${post.id}`}>\n             <div className=\"letter-info\">\n             <a href={post.id}>{post.upperLetter}</a>\n                 </div>\n                 </NavLink>\n            //  return (\n            //    <NavLink key={post.id} to={`/post/${post.id}`}>\n            //   <div className=\"recentPost\">\n            //   <h3>{post.blogTitle}</h3>\n            //   <span>{post.postedOn}</span>\n            //       </div>\n            //       </NavLink>\n             );\n           })\n         }\n        </div>\n\n      {/* </Card> */}\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React from 'react';\nimport './style.css';\nimport BlogPost from '../../components/BlogPost';\nimport Sidebar from '../../components/Sidebar';\n\n/**\n * @author\n * @function Post\n */\nconst Post = props => {\n    console.log(props);\n    return(\n        <section className=\"container\">\n            <BlogPost {...props}/>\n            {/* <Sidebar {...props}/> */}\n        </section>\n    );\n}\n\nexport default Post;","import React, {useState,useEffect}from 'react';\nimport './style.css';\nimport Card from '../UI/Card';\nimport blogPost from '../../data/info.json';\n\n\n/**\n * @author\n * @function GreetingPost\n */\n\nconst GreetingPost = props => {\n\n    const[post,setPost] = useState({\n        id : \"\",\n        wordE : \"\",\n        wordS : \"\",\n        pronunciation : \"\"\n    });\n    const[postId, setPostId] = useState(''); //initialization\n\n    //useEffect is when you do an action\n    useEffect(() => {\n        const postId = props.match.params.postId;\n        console.log(postId + \"This is the post Id stuff...First\");\n        const post = blogPost.greeting.find(post => post.id == postId);\n        console.log(post + \" This is the post variable...Second\");\n        setPost(post);\n        console.log(post + \" This is the post variable after setpost...Third\");\n        // setPostId(postId); //change page to the posts\n        console.log(postId + \" This is the post variable...Fourth\");\n    },[post,props.match.params.postId]); //make that call only once\n\n        return(\n          <div className=\"blogPostContainer\">\n            <h1>Saludos</h1>\n            <Card>\n                { <div className=\"postContent\">\n                    <h1>{post.wordE}</h1>\n                    <h1>{post.wordS}</h1>\n                    <p>{post.pronunciation}</p>\n\n                </div> }\n            </Card>\n\n          </div>\n\n          \n    );\n           // }\n}\n\nexport default GreetingPost;","import React,{useState,useEffect} from \"react\";\nimport \"./style.css\";\nimport Card from \"../UI/Card\";\nimport blogPost from '../../data/info.json';\nimport { NavLink } from \"react-router-dom/cjs/react-router-dom.min\";\n/**\n * @author\n * @function GreetingNavbar\n */\nconst GreetingNavbar = props => {\n\n  const[posts,setPosts] = useState([]);\n\n  useEffect(() => {\n      const posts = blogPost.greeting;\n      setPosts(posts);\n  },[posts]); //make that call only once\n\n\n  return (\n    <div className=\"s\">\n      {/* <Card style={{marginBottom:'20px',padding:'20px', boxSizing:'border-box'}}> */}\n      <div className=\"slider\">\n          {/* <span>Recent Posts</span> */}\n        </div>\n\n         <div className=\"slides\">\n         {\n           posts.map(post=>{\n            return (\n              <NavLink key={post.id} to={`/greeting/${post.id}`}>\n             <div className=\"letter-info\">\n             <a href={post.id}>{post.wordS}</a>\n                 </div>\n                 </NavLink>\n            //  return (\n            //    <NavLink key={post.id} to={`/post/${post.id}`}>\n            //   <div className=\"recentPost\">\n            //   <h3>{post.blogTitle}</h3>\n            //   <span>{post.postedOn}</span>\n            //       </div>\n            //       </NavLink>\n             );\n           })\n         }\n        </div>\n\n      {/* </Card> */}\n    </div>\n  );\n};\n\nexport default GreetingNavbar;\n","import React from 'react';\nimport './style.css';\nimport GreetingPost from '../../components/GreetingPost';\nimport GreetingNavbar from '../../components/GreetingNavbar';\n\n/**\n * @author\n * @function Greeting\n */\nconst Greeting = props => {\n    console.log(props);\n    return(\n        <section className=\"container\">\n            <GreetingPost {...props}/>\n            {/* <GreetingNavbar {...props}/> */}\n        </section>\n    );\n}\n\nexport default Greeting;","import React, {useState,useEffect}from 'react';\nimport './style.css';\nimport Card from '../UI/Card';\nimport blogPost from '../../data/info.json';\nimport { NavLink } from \"react-router-dom/cjs/react-router-dom.min\";\n\n/**\n * @author\n * @function CommonPhrasePost\n */\n\nconst CommonPhrasePost = props => {\n\n    // const settings = {\n    //     dots: true,\n    //     infinite: true,\n    //     speed: 500,\n    //     slidesToShow: 1,\n    //     slidesToScroll: 1\n    //   };\n    const[post,setPost] = useState({\n        id : \"\",\n        wordE : \"\",\n        wordS : \"\",\n        pronunciation : \"\",\n        audio : \"\"\n    });\n    const[postId, setPostId] = useState(''); //initialization\n\n    //useEffect is when you do an action\n    useEffect(() => {\n        const postId = props.match.params.postId;\n        console.log(postId + \"This is the post Id stuff...First\");\n        const post = blogPost.commonPhrase.find(post => post.id == postId);\n        console.log(post + \" This is the post variable...Second\");\n        setPost(post);\n        console.log(post + \" This is the post variable after setpost...Third\");\n        // setPostId(postId); //change page to the posts\n        console.log(postId + \" This is the post variable...Fourth\");\n    },[post,props.match.params.postId]); //make that call only once\n\n\n    \n    // if(post.blogImage==\"\")return null;\n        return(\n          <div className=\"blogPostContainer\">\n            <h1>Frases Comunes</h1>\n            <Card>\n                { <div className=\"postContent\">\n                    <h1>{post.wordS}</h1>\n                    <h1>{post.wordE}</h1>\n                    <h2>{post.pronunciation}</h2>\n                    <div className=\"iframe-div\">\n                    <iframe src={post.audio} frameborder=\"0\"></iframe>\n                    </div>\n\n                </div> }\n            </Card>\n\n          </div>\n\n          \n    );\n           // }\n}\n\nexport default CommonPhrasePost;","import React,{useState,useEffect} from \"react\";\nimport \"./style.css\";\nimport Card from \"../UI/Card\";\nimport blogPost from '../../data/info.json';\nimport { NavLink } from \"react-router-dom/cjs/react-router-dom.min\";\n/**\n * @author\n * @function CommonPhraseNavbar\n */\nconst CommonPhraseNavbar = props => {\n\n  const[posts,setPosts] = useState([]);\n\n  useEffect(() => {\n      const posts = blogPost.commonPhrase;\n      setPosts(posts);\n  },[posts]); //make that call only once\n\n\n  return (\n    <div className=\"s\">\n      {/* <Card style={{marginBottom:'20px',padding:'20px', boxSizing:'border-box'}}> */}\n      <div className=\"slider\">\n          {/* <span>Recent Posts</span> */}\n        </div>\n\n         <div className=\"slides\">\n         {\n           posts.map(post=>{\n            return (\n              <NavLink key={post.id} to={`/commonphrase/${post.id}`}>\n             <div className=\"letter-info\">\n             <a href={post.id}>{post.wordS}</a>\n                 </div>\n                 </NavLink>\n            //  return (\n            //    <NavLink key={post.id} to={`/post/${post.id}`}>\n            //   <div className=\"recentPost\">\n            //   <h3>{post.blogTitle}</h3>\n            //   <span>{post.postedOn}</span>\n            //       </div>\n            //       </NavLink>\n             );\n           })\n         }\n        </div>\n\n      {/* </Card> */}\n    </div>\n  );\n};\n\nexport default CommonPhraseNavbar;\n","import React from 'react';\nimport './style.css';\nimport CommonPhrasePost from '../../components/CommonPhrasePost';\nimport CommonPhraseNavbar from '../../components/CommonPhraseNavbar';\n\n/**\n * @author\n * @function CommonPhrase\n */\nconst CommonPhrase = props => {\n    console.log(props);\n    return(\n        <section className=\"container\">\n            <CommonPhrasePost {...props}/>\n            {/* <CommonPhraseNavbar {...props}/> */}\n        </section>\n    );\n}\n\nexport default CommonPhrase;","import React, {useState,useEffect}from 'react';\nimport './style.css';\nimport Card from '../UI/Card';\nimport blogPost from '../../data/info.json';\nimport { NavLink } from \"react-router-dom/cjs/react-router-dom.min\";\n// import t from '../../audio/hello.mp3';\n\n\n/**\n * @author\n * @function FoodPost\n */\n\nconst FoodPost = props => {\n\n    // const settings = {\n    //     dots: true,\n    //     infinite: true,\n    //     speed: 500,\n    //     slidesToShow: 1,\n    //     slidesToScroll: 1\n    //   };\n    const[post,setPost] = useState({\n        id : \"\",\n        wordE : \"\",\n        wordS : \"\",\n        pronunciation : \"\",\n        audio : \"\"\n    });\n    const[postId, setPostId] = useState(''); //initialization\n\n    //useEffect is when you do an action\n    useEffect(() => {\n        const postId = props.match.params.postId;\n        console.log(postId + \"This is the post Id stuff...First\");\n        const post = blogPost.food.find(post => post.id == postId);\n        console.log(post + \" This is the post variable...Second\");\n        setPost(post);\n        console.log(post + \" This is the post variable after setpost...Third\");\n        // setPostId(postId); //change page to the posts\n        console.log(postId + \" This is the post variable...Fourth\");\n    },[post,props.match.params.postId]); //make that call only once\n\n    const audioTune = new Audio(post.audio);\n    console.log(\"This is the audioTune\" + post.audio);\n    // variable to play audio in loop\n    const [playInLoop, setPlayInLoop] = useState(false);\n   \n    // load audio file on component load\n    useEffect(() => {\n      audioTune.load();\n    }, [])\n   \n    // set the loop of audio tune\n    useEffect(() => {\n      audioTune.loop = playInLoop;\n    }, [playInLoop])\n   \n    // play audio sound\n    const playSound = () => {\n      audioTune.play();\n    }\n   \n    // pause audio sound\n    const pauseSound = () => {\n      audioTune.pause();\n    }\n   \n    // stop audio sound\n    const stopSound = () => {\n      audioTune.pause();\n      audioTune.currentTime = 0;\n    }\n    // if(post.blogImage==\"\")return null;\n        return(\n          <div className=\"blogPostContainer\">\n            <h1>La Comida</h1>\n            <Card>\n                { <div className=\"postContent\">\n                    <h1>{post.wordS}</h1>\n                    <h2>{post.wordE}</h2>\n                    <p>{post.pronunciation}</p>\n                    <div className=\"iframe-div\"><iframe src={post.audio} frameborder=\"0\"></iframe></div>\n\n                    {/* <audio controls src={a}>Your browser does not support the <code>audio</code> element</audio>  */}\n {/* <input type=\"button\" className=\"btn btn-primary mr-2\" value=\"Play\" onClick={playSound}></input>\n <input type=\"button\" className=\"btn btn-warning mr-2\" value=\"Pause\" onClick={pauseSound}></input>\n <input type=\"button\" className=\"btn btn-danger mr-2\" value=\"Stop\" onClick={stopSound}></input>\n\n <label><input type=\"checkbox\" checked={playInLoop} onChange={e => setPlayInLoop(e.target.checked)} /> Play in Loop</label> */}\n                </div> }\n            </Card>\n\n          </div>\n\n          \n    );\n           // }\n}\n\nexport default FoodPost;","import React,{useState,useEffect} from \"react\";\nimport \"./style.css\";\nimport Card from \"../UI/Card\";\nimport blogPost from '../../data/info.json';\nimport { NavLink } from \"react-router-dom/cjs/react-router-dom.min\";\nimport Popup from \"reactjs-popup\";\nimport vid from '../../food.mov';\n/**\n * @author\n * @function FoodNavbar\n */\nconst FoodNavbar = props => {\n\n  const[posts,setPosts] = useState([]);\n\n  useEffect(() => {\n      const posts = blogPost.food;\n      setPosts(posts);\n  },[posts]); //make that call only once\n\n\n  return (\n    <div className=\"s\">\n      {/* <Card style={{marginBottom:'20px',padding:'20px', boxSizing:'border-box'}}> */}\n      <div className=\"slider\">\n          {/* <span>Recent Posts</span> */}\n        </div>\n\n         <div className=\"slides\">\n         {\n           posts.map(post=>{\n            return (\n\n              <NavLink key={post.id} to={`/food/${post.id}`}>\n              \n             <div className=\"letter-info\">\n             <a href={post.id}>{post.wordS}</a>\n                 </div>\n                 </NavLink>\n             );\n           })\n         }\n        </div>\n\n      {/* </Card> */}\n    </div>\n  );\n};\n\nexport default FoodNavbar;\n","  \nexport const quiz5 =  {\n    \"quizTitle\": \"Examen de Frases Comunes\",\n    \"quizSynopsis\": \"Bienvenido a este examen. Toma tu tiempo y recuerda las cosas que haz aprendido. Buenas suerte!\",\n    \"questions\": [\n      {\n        \"question\": \"Como se dice, 'Fruta' en Ingles?\",\n        \"questionType\": \"text\",\n        \"answerSelectionType\": \"single\",\n        \"answers\": [\n          \"Fruit\",\n          \"Vegetable\",\n          \"Meat\",\n          \"Dairy Products\"\n        ],\n        \"correctAnswer\": \"1\",\n        \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\n        \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\n        \"explanation\": \"Vegetable significa vegetal. Meat significa carne. Dairy Products significa products lacteos\",\n        \"point\": \"20\"\n      },\n      {\n        \"question\": \"Como se dice 'Ajo' en Ingles?\",\n        \"questionType\": \"text\",\n        \"answerSelectionType\": \"single\",\n        \"answers\": [\n          \"Garlic\",\n          \"Onion\",\n          \"Egg\",\n          \"Flour\"\n        ],\n        \"correctAnswer\": \"1\",\n        \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\n        \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\n        \"explanation\": \"Onion significa Cebolla. Egg significa Huevo, Flour significa Harina\",\n        \"point\": \"20\"\n      },\n      {\n        \"question\": \"Como se dice 'Frijoles' en Ingles?\",\n        \"questionType\": \"text\",\n        \"answerSelectionType\": \"single\",\n        \"answers\": [\n          \"Rice\",\n          \"Ham\",\n          \"Pear\",\n          \"Beans\"\n        ],\n        \"correctAnswer\": \"4\",\n        \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\n        \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\n        \"explanation\": \"Rice significa arroz, Ham significa hamon, Pear significa pera\",\n        \"point\": \"10\"\n      },\n      {\n        \"question\": \"Como se dice 'Mantequilla' en Ingles?\",\n        \"questionType\": \"text\",\n        \"answerSelectionType\": \"single\",\n        \"answers\": [\n          \"Milk\",\n          \"Pepper\",\n          \"Butter\",\n          \"Cereal\"\n        ],\n        \"correctAnswer\": \"3\",\n        \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\n        \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\n        \"explanation\": \"Milk significa leche, Pepper significa pimienta, Cereal significa cereal\",\n        \"point\": \"10\"\n      },\n      {\n        \"question\": \"Como se dice 'Queso' en Ingles?\",\n        \"questionType\": \"text\",\n        \"answerSelectionType\": \"single\",\n        \"answers\": [\n          \"Cheese\",\n          \"Cream\",\n          \"Sour cream\"\n        ],\n        \"correctAnswer\": \"1\",\n        \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\n        \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\n        \"explanation\": \"Cream significa crema, sour cream significa crema acida\",\n        \"point\": \"10\"\n      },\n      {\n        \"question\": \"Acuales respuestas son frutas en Ingles?\",\n        \"questionType\": \"text\",\n        \"answerSelectionType\": \"multiple\",\n        \"answers\": [\n          \"Grape\",\n          \"Apple\",\n          \"Lettuce\",\n          \"Pear\",\n          \"Spinach\",\n          \"Celery\"\n        ],\n        \"correctAnswer\": [1,2,4],\n        \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\n        \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\n        \"explanation\": \"Lettuce significa lechuga. Spinach significa espinaca. Celery significa apio. Todos estos son vegetales.\",\n        \"point\": \"10\"\n      }\n    ]\n  } \n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport marked from 'marked';\nimport dompurify from 'dompurify';\n\nclass Core extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      incorrectAnswer: false,\n      correctAnswer: false,\n      showNextQuestionButton: false,\n      endQuiz: false,\n      currentQuestionIndex: 0,\n      buttons: {},\n      buttonClasses: {},\n      correct: [],\n      incorrect: [],\n      userInput: [],\n      filteredValue: 'all',\n      userAttempt: 1,\n      showDefaultResult: this.props.showDefaultResult != undefined ? this.props.showDefaultResult : true,\n      onComplete: this.props.onComplete != undefined ? this.props.onComplete : null,\n      customResultPage: this.props.customResultPage != undefined ? this.props.customResultPage : null,\n      showInstantFeedback: this.props.showInstantFeedback != undefined ? this.props.showInstantFeedback : false,\n      continueTillCorrect: this.props.continueTillCorrect != undefined ? this.props.continueTillCorrect : false\n    };\n  }\n\n  checkAnswer = (index, correctAnswer, answerSelectionType) => {\n    const { correct, incorrect, currentQuestionIndex, continueTillCorrect, userInput } = this.state;\n    let { userAttempt, showNextQuestionButton } = this.state;\n\n    if(answerSelectionType == 'single') {\n      if(userInput[currentQuestionIndex] == undefined) {\n        userInput.push(index)\n      }\n  \n      if(index == correctAnswer) {\n        if( incorrect.indexOf(currentQuestionIndex) < 0 && correct.indexOf(currentQuestionIndex) < 0) {\n          correct.push(currentQuestionIndex);\n        }\n\n        let disabledAll = {\n          0: {disabled: true},\n          1: {disabled: true},\n          2: {disabled: true},\n          3: {disabled: true}\n        }\n  \n        this.setState((prevState) => {\n          const buttons = Object.assign(\n            {},\n            prevState.buttons,\n            {\n              ...disabledAll,\n              [index-1]: {\n                className: (index == correctAnswer)? \"correct\" : \"incorrect\"\n              },\n            }\n          );\n          return { buttons };\n        })\n  \n        this.setState({\n          correctAnswer: true,\n          incorrectAnswer: false,\n          correct: correct,\n          showNextQuestionButton: true,\n        })\n      } else {\n        if( correct.indexOf(currentQuestionIndex) < 0 && incorrect.indexOf(currentQuestionIndex) < 0 ) {\n          incorrect.push(currentQuestionIndex)\n        }\n  \n        if(continueTillCorrect) {\n          this.setState((prevState) => {\n            const buttons = Object.assign(\n              {},\n              prevState.buttons,\n              {\n                [index-1]: {\n                  disabled: !prevState.buttons[index-1]\n                }\n              }\n            );\n            return { buttons };\n          });\n        } else {\n          let disabledAll = {\n            0: {disabled: true},\n            1: {disabled: true},\n            2: {disabled: true},\n            3: {disabled: true}\n          }\n  \n          this.setState((prevState) => {\n            const buttons = Object.assign(\n              {},\n              prevState.buttons,\n              {\n                ...disabledAll,\n                [index-1]: {\n                  className: (index == correctAnswer)? \"correct\" : \"incorrect\"\n                },\n              }\n            );\n            return { buttons };\n          })\n  \n          this.setState({\n            showNextQuestionButton: true,\n          })\n        }\n  \n        this.setState({\n          incorrectAnswer: true,\n          correctAnswer: false,\n          incorrect: incorrect,\n        })\n      }\n    } else {\n      \n      let maxNumberOfMultipleSelection = correctAnswer.length;\n\n      if(userInput[currentQuestionIndex] == undefined) {\n        userInput[currentQuestionIndex] = []\n      }\n      \n      if(userInput[currentQuestionIndex].length < maxNumberOfMultipleSelection) {\n        userInput[currentQuestionIndex].push(index)\n\n        if(correctAnswer.includes(index)) {\n          if(userInput[currentQuestionIndex].length <= maxNumberOfMultipleSelection)  {\n          \n            this.setState((prevState) => {\n              const buttons = Object.assign(\n                {},\n                prevState.buttons,\n                {\n                  [index-1]: {\n                    disabled: !prevState.buttons[index-1],\n                    className: (correctAnswer.includes(index))? \"correct\" : \"incorrect\"\n                  },\n                }\n              );\n              return { buttons };\n            })\n  \n          \n          }\n        } else {\n          if(userInput[currentQuestionIndex].length <= maxNumberOfMultipleSelection)  { \n            this.setState((prevState) => {\n              const buttons = Object.assign(\n                {},\n                prevState.buttons,\n                {\n                  [index-1]: {\n                    className: (correctAnswer.includes(index))? \"correct\" : \"incorrect\"\n                  },\n                }\n              );\n              return { buttons };\n            })\n          }\n        }\n      }\n\n      if(maxNumberOfMultipleSelection == userAttempt) {\n        let cnt = 0;\n        for(var i=0; i<correctAnswer.length; i++) {\n          if(userInput[currentQuestionIndex].includes(correctAnswer[i])) {\n            cnt ++;\n          }\n        }\n\n        if(cnt == maxNumberOfMultipleSelection) {\n          correct.push(currentQuestionIndex);\n          this.setState({\n            correctAnswer: true,\n            incorrectAnswer: false,\n            correct: correct,\n            showNextQuestionButton: true,\n            userAttempt: 1\n          })\n        } else {\n          incorrect.push(currentQuestionIndex)\n          this.setState({\n            incorrectAnswer: true,\n            correctAnswer: false,\n            incorrect: incorrect,\n            showNextQuestionButton: true,\n            userAttempt: 1\n          })\n        }\n      } else {\n        if(!showNextQuestionButton) {\n          this.setState({\n            userInput,\n            userAttempt: userAttempt + 1\n          })\n        }\n      }\n    }\n  }\n\n  nextQuestion = (currentQuestionIndex) => {\n    const { questions } = this.props;\n\n    var initState = {\n      incorrectAnswer: false,\n      correctAnswer: false,\n      showNextQuestionButton: false,\n      buttons: {},\n    }\n\n    if(currentQuestionIndex + 1 == questions.length) {\n      this.setState({\n        ...initState,\n        endQuiz: true\n      })\n    } else {\n      this.setState({\n        ...initState,\n        currentQuestionIndex: currentQuestionIndex + 1,\n      })\n    }\n  }\n\n  renderMessageforCorrectAnswer = (question) => {\n    const defaultMessage = 'You are correct. Please click Next to continue.';\n    return question.messageForCorrectAnswer || defaultMessage;\n  }\n\n  renderMessageforIncorrectAnswer = (question) => {\n    const defaultMessage = 'Incorrect answer. Please try again.';\n    return question.messageForIncorrectAnswer || defaultMessage;\n  }\n\n  renderExplanation = (question, isResultPage) => {\n    const explanation = question.explanation;\n    if(!explanation) {\n      return (null);\n    }\n    \n    if(isResultPage) {\n      return (\n        <div className=\"explaination\">\n          {explanation}\n        </div>\n      )\n    }\n\n    return (\n      <div>\n        <br/>\n        {explanation}\n      </div>\n    )\n  }\n\n  handleChange = (event) => {\n    this.setState({filteredValue: event.target.value});\n  }\n\n  renderQuizResultFilter = () => {\n    const { appLocale } = this.props;\n    return (\n      <div className=\"quiz-result-filter\">\n          <select value={this.state.filteredValue} onChange={this.handleChange}>\n            <option value=\"all\">{appLocale.resultFilterAll}</option>\n            <option value=\"correct\">{appLocale.resultFilterCorrect}</option>\n            <option value=\"incorrect\">{appLocale.resultFilterIncorrect}</option>\n          </select>\n      </div>\n    );\n  }\n\n  renderAnswerInResult = (question, userInputIndex) => {\n    const { answers, correctAnswer, questionType } = question;\n    let { answerSelectionType } = question;\n    let answerBtnCorrectClassName;\n    let answerBtnIncorrectClassName;\n\n    // Default single to avoid code breaking due to automatic version upgrade\n    answerSelectionType = answerSelectionType || 'single';\n\n    return answers.map( (answer, index) => {\n      if(answerSelectionType == 'single') {\n        answerBtnCorrectClassName = ( index+1 == correctAnswer ? ' correct ': '' )\n        answerBtnIncorrectClassName = (userInputIndex != correctAnswer && index + 1 == userInputIndex ? ' incorrect ' : '')\n      } else {\n        answerBtnCorrectClassName = ( correctAnswer.includes(index + 1)  ? ' correct ': '' )\n        answerBtnIncorrectClassName = ( !correctAnswer.includes(index + 1) && userInputIndex.includes(index + 1) ? ' incorrect ' : '')\n      }\n\n      return(\n        <div key={index}>\n           <button disabled={true} className={\"answerBtn btn \" + answerBtnCorrectClassName + answerBtnIncorrectClassName}>\n            { questionType == 'text' && <span>{ answer }</span> }\n            { questionType == 'photo' && <img src={ answer } /> }\n          </button>\n        </div>\n      )\n    });\n  }\n\n  renderQuizResultQuestions = () => {\n    const { filteredValue } = this.state;\n    let { userInput } = this.state;\n    let { questions } = this.props;\n\n    if(filteredValue != 'all') {\n      questions = questions.filter( (question, index) => {\n        return this.state[filteredValue].indexOf(index) != -1\n      })\n\n      userInput = userInput.filter( (input, index) => {\n        return this.state[filteredValue].indexOf(index) != -1\n      })\n    }\n\n    return questions.map((question, index) => {\n      const userInputIndex = userInput[index];\n\n      // Default single to avoid code breaking due to automatic version upgrade\n      let answerSelectionType = question.answerSelectionType || 'single';\n      \n      return (\n        <div className=\"result-answer-wrapper\" key={index+1}>\n\n        <h3 dangerouslySetInnerHTML={this.rawMarkup(`Q${question.questionIndex}: ${question.question}`)}/> \n        {question.questionPic && <img src={question.questionPic}/>}\n        {\n          this.renderTags(answerSelectionType, question.correctAnswer.length)\n        }\n        <div className=\"result-answer\">\n            {\n              this.renderAnswerInResult(question, userInputIndex)\n            }\n        </div>\n        {this.renderExplanation(question, true)}\n      </div>\n      )\n    })\n  }\n\n  rawMarkup = (data) => {\n    const sanitizer = dompurify.sanitize;\n    let rawMarkup = marked(sanitizer(data));\n    return { __html: rawMarkup };\n  }\n\n  renderAnswers = (question, buttons) => {\n    const { answers, correctAnswer, questionType } = question;\n    let { answerSelectionType } = question;\n    \n    // Default single to avoid code breaking due to automatic version upgrade\n    answerSelectionType = answerSelectionType || 'single';\n\n    return answers.map( (answer, index) => {\n      if(buttons[index] != undefined) {\n        return (\n          <button key={index} disabled={ buttons[index].disabled || false } className={`${buttons[index].className} answerBtn btn`}  onClick={() => this.checkAnswer(index+1, correctAnswer, answerSelectionType)}>\n            { questionType == 'text' && <span>{answer}</span> }\n            { questionType == 'photo' && <img src={answer} /> }\n          </button>\n        )\n      } else {\n        return (\n          <button key={index} onClick={() => this.checkAnswer(index+1, correctAnswer, answerSelectionType)} className=\"answerBtn btn\">\n          { questionType == 'text' && answer }\n          { questionType == 'photo' && <img src={answer}/> }\n          </button>\n        )\n      }\n    })\n  }\n\n  renderTags(answerSelectionType, numberOfSelection) {\n    const { \n      appLocale: {\n        singleSelectionTagText,\n        multipleSelectionTagText,\n        pickNumberOfSelection\n      } \n    } = this.props;\n\n    return (\n      <div className=\"tag-container\">\n        {\n          answerSelectionType == 'single' && <span className=\"single selection-tag\"> { singleSelectionTagText }</span>\n        }\n        {\n          answerSelectionType == 'multiple' && <span className=\"multiple selection-tag\"> { multipleSelectionTagText }</span>\n        }\n        <span className=\"number-of-selection\">{ pickNumberOfSelection.replace(\"<numberOfSelection>\", numberOfSelection) }</span>\n      </div>\n      )\n  }\n\n  render() {\n    const { questions, appLocale } = this.props;\n    const { \n      correct, \n      incorrect, \n      userInput, \n      currentQuestionIndex, \n      correctAnswer, \n      incorrectAnswer, \n      endQuiz, \n      showInstantFeedback, \n      buttons, \n      onComplete, \n      showNextQuestionButton, \n      showDefaultResult, \n      customResultPage\n    } = this.state;\n\n    let question = questions[currentQuestionIndex];\n    let totalPoints = 0;\n    let correctPoints = 0;\n\n    for(var i=0; i<questions.length; i++) {\n      let point = questions[i].point || 0;\n      if(typeof point === 'string' || point instanceof String) {\n        point = parseInt(point)\n      }\n\n      totalPoints = totalPoints + point;\n\n      if(correct.includes(i)) {\n        correctPoints = correctPoints + point;\n      }\n    }\n\n    const questionSummary = {\n      numberOfQuestions: questions.length,\n      numberOfCorrectAnswers: correct.length,\n      numberOfIncorrectAnswers: incorrect.length,\n      questions: questions,\n      userInput: userInput,\n      totalPoints: totalPoints,\n      correctPoints: correctPoints\n    };\n\n    let { answerSelectionType } = question;\n\n    // Default single to avoid code breaking due to automatic version upgrade\n    answerSelectionType = answerSelectionType || 'single';\n    \n    return (\n      <div className=\"questionWrapper\">\n        {!endQuiz &&\n          <div className=\"questionWrapperBody\">\n            <div className=\"questionModal\">\n              {incorrectAnswer && showInstantFeedback && \n                <div className=\"alert incorrect\">{ this.renderMessageforIncorrectAnswer(question) }</div>\n              }\n              { correctAnswer && showInstantFeedback && \n                <div className=\"alert correct\">\n                  { this.renderMessageforCorrectAnswer(question) } \n                  { this.renderExplanation(question, false) }\n                </div>\n              }\n            </div>\n            <div>{ appLocale.question } { currentQuestionIndex + 1 }:</div>\n            <h3 dangerouslySetInnerHTML={this.rawMarkup(question.question)}/> \n            {question.questionPic && <img src={question.questionPic}/>}\n            {\n              this.renderTags(answerSelectionType, question.correctAnswer.length)\n            }\n            {\n              this.renderAnswers(question, buttons)\n            }\n            { showNextQuestionButton &&\n              <div><button onClick={() => this.nextQuestion(currentQuestionIndex)} className=\"nextQuestionBtn btn\">{appLocale.nextQuestionBtn}</button></div>\n            }\n          </div>\n        }\n        { endQuiz && showDefaultResult && customResultPage == null &&\n            <div className=\"card-body\">\n            <h2>\n              {appLocale.resultPageHeaderText.replace(\"<correctIndexLength>\", correct.length).replace(\"<questionLength>\", questions.length) } \n            </h2>\n            <h2>\n              { appLocale.resultPagePoint.replace(\"<correctPoints>\", correctPoints).replace(\"<totalPoints>\", totalPoints) }\n            </h2>\n            <br/> \n              { this.renderQuizResultFilter() }\n              { this.renderQuizResultQuestions() }\n            </div>\n        }\n\n        {\n          endQuiz && onComplete != undefined &&\n             onComplete(questionSummary)\n        }\n\n        {\n          endQuiz && !showDefaultResult  && customResultPage != undefined &&\n             customResultPage(questionSummary)\n        }\n        </div>\n    );\n  }\n}\n\nCore.propTypes = {\n  questions: PropTypes.array,\n  showDefaultResult: PropTypes.bool,\n  onComplete: PropTypes.func,\n  customResultPage: PropTypes.func,\n  showInstantFeedback: PropTypes.bool,\n  continueTillCorrect: PropTypes.bool,\n  appLocale: PropTypes.object\n};\n\nexport default Core;","export const defaultLocale =  {\n    \"landingHeaderText\": \"<questionLength> Preguntas\",\n    \"question\": \"Pregunta\",\n    \"startQuizBtn\": \"Empieza Examen\",\n    \"resultFilterAll\": \"Todos\",\n    \"resultFilterCorrect\": \"Correcto\",\n    \"resultFilterIncorrect\": \"Incorrecto\",\n    \"nextQuestionBtn\": \"Siguiente Pregunta\",\n    \"resultPageHeaderText\": \"Haz completado el examen. Recivistes <correctIndexLength> fuera de <questionLength> preguntas.\",\n    \"resultPagePoint\": \"Calificaste <correctPoints> fuera de <totalPoints>.\",\n    \"singleSelectionTagText\": \"Single Selection\",\n    \"multipleSelectionTagText\": \"Multiple Selection\",\n    \"pickNumberOfSelection\": \"Pick <numberOfSelection>\"\n  } ","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Core from './Core2';\nimport { defaultLocale } from './Locale2';\nimport \"./styles.css\";\n\nclass Quiz extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      start: false,\n    }\n    this.start = this.start.bind(this);\n  }\n\n  start = () => {\n    this.setState({start: true})\n  }\n\n  shuffleQuestions = (questions) => {\n    for (let i = questions.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [questions[i], questions[j]] = [questions[j], questions[i]];\n    }\n    return questions;\n  }\n\n  validateQuiz = (quiz) => {\n    if(!quiz) {\n      console.error(\"Quiz object is required.\");\n      return false;\n    } \n\n    const { questions } = quiz;\n    if(!questions ) {\n      console.error(\"Field 'questions' is required.\");\n      return false;\n    }\n\n    for(var i=0; i<questions.length; i++) {\n      const { question, questionType, questionPic, answerSelectionType, answers, correctAnswer } = questions[i];\n      if(!question) {\n        console.error(\"Field 'question' is required.\");\n        return false;\n      }\n  \n      if(!questionType) {\n        console.error(\"Field 'questionType' is required.\");\n        return false;\n      } else {\n        if(questionType != 'text' && questionType != 'photo') {\n          console.error(\"The value of 'questionType' is either 'text' or 'photo'.\");\n          return false;\n        }\n      }\n  \n      if(!answers) {\n        console.error(\"Field 'answers' is required.\");\n        return false;\n      } else {\n        if(!Array.isArray(answers)) {\n          console.error(\"Field 'answers' has to be an Array\");\n          return false;\n        } \n      }\n  \n      if(!correctAnswer) {\n        console.error(\"Field 'correctAnswer' is required.\");\n        return false;\n      }\n  \n      if(!answerSelectionType) {\n        // Default single to avoid code breaking due to automatic version upgrade\n        console.warn(\"Field answerSelectionType should be defined since v0.3.0. Use single by default.\")\n        answerSelectionType = answerSelectionType || 'single'; \n      }\n  \n      if(answerSelectionType == 'single' && !(typeof answerSelectionType === 'string' || answerSelectionType   instanceof String) ) {\n        console.error(\"answerSelectionType is single but expecting String in the field correctAnswer\");\n        return false;\n      }\n  \n      if(answerSelectionType == 'multiple' && !Array.isArray(correctAnswer)) {\n        console.error(\"answerSelectionType is multiple but expecting Array in the field correctAnswer\");\n        return false;\n      }\n    }\n\n    return  true;\n  }\n\n  render() {\n    const { quiz, shuffle, showDefaultResult, onComplete, customResultPage, showInstantFeedback, continueTillCorrect } = this.props;\n\n\n    if(!this.validateQuiz(quiz)) {\n      return (null)\n    }\n\n    const appLocale = {\n      ...defaultLocale,\n      ...quiz.appLocale\n    };\n    \n    let questions = quiz.questions;\n      if(shuffle) {\n        questions = this.shuffleQuestions(questions);\n      }\n\n      questions = questions.map((question, index) => ({\n        ...question, \n        questionIndex : index + 1\n      }));\n\n      return (\n        <div className=\"react-quiz-container\">\n          {!this.state.start &&\n            <div>\n              <h2>{quiz.quizTitle}</h2>\n              <div> {appLocale.landingHeaderText.replace(\"<questionLength>\" , quiz.questions.length )}</div>\n              { quiz.quizSynopsis && \n                  <div className=\"quiz-synopsis\">\n                      {quiz.quizSynopsis}\n                  </div> \n              }\n              <div className=\"startQuizWrapper\">\n                <button onClick={() => this.start()} className=\"startQuizBtn btn\">{appLocale.startQuizBtn}</button>\n              </div>\n            </div>\n          }\n\n          {\n            this.state.start && <Core questions={questions} showDefaultResult={showDefaultResult} onComplete={onComplete} customResultPage={customResultPage} showInstantFeedback={showInstantFeedback} continueTillCorrect={continueTillCorrect} appLocale={appLocale}/>\n          }\n        </div>\n      );\n    }\n}\n\nQuiz.propTypes = {\n  quiz: PropTypes.object,\n  shuffle: PropTypes.bool,\n  showDefaultResult: PropTypes.bool,\n  onComplete: PropTypes.func,\n  customResultPage: PropTypes.func,\n  showInstantFeedback: PropTypes.bool,\n  continueTillCorrect: PropTypes.bool\n};\n\nexport default Quiz;","import React from 'react';\nimport './style.css';\nimport FoodPost from '../../components/FoodPost';\nimport FoodNavbar from '../../components/FoodNavbar';\nimport { quiz1 } from '../FoodQ/quiz';\nimport Quiz from '../../components/FoodQuiz/Quiz2';\nimport Popup from \"reactjs-popup\";\nimport vid from '../../food.mov';\n\n/**\n * @author\n * @function Food\n */\nconst Food = props => {\n    console.log(props);\n    return(\n        <section className=\"container\">\n            <Popup trigger={<button> Click me for Help</button>} position=\"left top\">\n            <video controls>\n                <source src={vid} type=\"video/mp4\"/>\n            </video>  \n            </Popup>\n            <FoodPost {...props}/>\n\n            {/* <h3>Cuando estes listo, toma este examen</h3>\n            <Quiz quiz={quiz1} shuffle={true} showInstantFeedback={true} continueTillCorrect={true}/> */}\n\n            {/* <FoodNavbar {...props}/> */}\n        </section>\n    );\n}\n\nexport default Food;","import React, {useState,useEffect}from 'react';\nimport './style.css';\nimport Card from '../UI/Card';\nimport blogPost from '../../data/info.json';\nimport { NavLink } from \"react-router-dom/cjs/react-router-dom.min\";\n\n/**\n * @author\n * @function PeoplePost\n */\n\nconst PeoplePost = props => {\n\n    // const settings = {\n    //     dots: true,\n    //     infinite: true,\n    //     speed: 500,\n    //     slidesToShow: 1,\n    //     slidesToScroll: 1\n    //   };\n    const[post,setPost] = useState({\n        id : \"\",\n        wordE : \"\",\n        wordS : \"\",\n        pronunciation : \"\"\n    });\n    const[postId, setPostId] = useState(''); //initialization\n\n    //useEffect is when you do an action\n    useEffect(() => {\n        const postId = props.match.params.postId;\n        console.log(postId + \"This is the post Id stuff...First\");\n        const post = blogPost.people.find(post => post.id == postId);\n        console.log(post + \" This is the post variable...Second\");\n        setPost(post);\n        console.log(post + \" This is the post variable after setpost...Third\");\n        // setPostId(postId); //change page to the posts\n        console.log(postId + \" This is the post variable...Fourth\");\n    },[post,props.match.params.postId]); //make that call only once\n\n\n    \n    // if(post.blogImage==\"\")return null;\n        return(\n          <div className=\"blogPostContainer\">\n            <h1>Las Personas</h1>\n            <Card>\n                { <div className=\"postContent\">\n                    <h3>{post.wordS}</h3>\n                    <h3>{post.wordE}</h3>\n                    <p>{post.pronunciation}</p>\n\n                </div> }\n            </Card>\n\n          </div>\n\n          \n    );\n           // }\n}\n\nexport default PeoplePost;","import React,{useState,useEffect} from \"react\";\nimport \"./style.css\";\nimport Card from \"../UI/Card\";\nimport blogPost from '../../data/info.json';\nimport { NavLink } from \"react-router-dom/cjs/react-router-dom.min\";\n/**\n * @author\n * @function PeopleNavbar\n */\nconst PeopleNavbar = props => {\n\n  const[posts,setPosts] = useState([]);\n\n  useEffect(() => {\n      const posts = blogPost.people;\n      setPosts(posts);\n  },[posts]); //make that call only once\n\n\n  return (\n    <div className=\"s\">\n      {/* <Card style={{marginBottom:'20px',padding:'20px', boxSizing:'border-box'}}> */}\n      <div className=\"slider\">\n          {/* <span>Recent Posts</span> */}\n        </div>\n\n         <div className=\"slides\">\n         {\n           posts.map(post=>{\n            return (\n              <NavLink key={post.id} to={`/people/${post.id}`}>\n             <div className=\"letter-info\">\n             <a href={post.id}>{post.wordS}</a>\n                 </div>\n                 </NavLink>\n            //  return (\n            //    <NavLink key={post.id} to={`/post/${post.id}`}>\n            //   <div className=\"recentPost\">\n            //   <h3>{post.blogTitle}</h3>\n            //   <span>{post.postedOn}</span>\n            //       </div>\n            //       </NavLink>\n             );\n           })\n         }\n        </div>\n\n      {/* </Card> */}\n    </div>\n  );\n};\n\nexport default PeopleNavbar;\n","import React from 'react';\nimport './style.css';\nimport PeoplePost from '../../components/PeoplePost';\nimport PeopleNavbar from '../../components/PeopleNavbar';\n\n/**\n * @author\n * @function People\n */\nconst People = props => {\n    console.log(props);\n    return(\n        <section className=\"container\">\n            <PeoplePost {...props}/>\n            {/* <PeopleNavbar {...props}/> */}\n        </section>\n    );\n}\n\nexport default People;","  \nexport const quiz3 =  {\n    \"quizTitle\": \"Examen de Frases Comunes\",\n    \"quizSynopsis\": \"Bienvenido a este examen. Toma tu tiempo y recuerda las cosas que haz aprendido. Buenas suerte!\",\n    \"questions\": [\n      {\n        \"question\": \"Como se dice, 'Tengo Hambre?' en Ingles?\",\n        \"questionType\": \"text\",\n        \"answerSelectionType\": \"single\",\n        \"answers\": [\n          \"I am hungry\",\n          \"I am happy\",\n          \"I am sad\",\n          \"I am sick\"\n        ],\n        \"correctAnswer\": \"1\",\n        \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\n        \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\n        \"explanation\": \"I am happy significa estoy feliz. I am sad significa estoy triste.\",\n        \"point\": \"20\"\n      },\n      {\n        \"question\": \"Como se dice 'yo no sé' en Ingles?\",\n        \"questionType\": \"text\",\n        \"answerSelectionType\": \"single\",\n        \"answers\": [\n          \"I do not like it\",\n          \"I love you\",\n          \"I do not know\"\n        ],\n        \"correctAnswer\": \"3\",\n        \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\n        \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\n        \"explanation\": \"I do not like it significa Yo no se. I love you significa Te amo\",\n        \"point\": \"20\"\n      },\n      {\n        \"question\": \"Como se dice 'Cuando?' en Ingles?\",\n        \"questionType\": \"text\",\n        \"answerSelectionType\": \"single\",\n        \"answers\": [\n          \"Who\",\n          \"When\",\n          \"Where\"\n        ],\n        \"correctAnswer\": \"2\",\n        \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\n        \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\n        \"explanation\": \"Who significa Quien. Where significa Where\",\n        \"point\": \"10\"\n      },\n      {\n        \"question\": \"Como se dice 'Porque?' en Ingles?\",\n        \"questionType\": \"text\",\n        \"answerSelectionType\": \"single\",\n        \"answers\": [\n          \"What\",\n          \"Why\",\n          \"How\"\n        ],\n        \"correctAnswer\": \"2\",\n        \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\n        \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\n        \"explanation\": \"What significa Que. How significa Como\",\n        \"point\": \"10\"\n      },\n      {\n        \"question\": \"Como se dice 'No me gusta' en Ingles?\",\n        \"questionType\": \"text\",\n        \"answerSelectionType\": \"single\",\n        \"answers\": [\n          \"I am from\",\n          \"What is your name\",\n          \"I do not like it\"\n        ],\n        \"correctAnswer\": \"3\",\n        \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\n        \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\n        \"explanation\": \"I am from significa Yo soy de. What is your name significa Que es tu nombre.\",\n        \"point\": \"10\"\n      },\n      {\n        \"question\": \"Como se dice 'Me puede ayudar/Me puedes ayudar' en Ingles?\",\n        \"questionType\": \"text\",\n        \"answerSelectionType\": \"single\",\n        \"answers\": [\n          \"Can you help me\",\n          \"How much does it cost\",\n          \"What is your name\"\n        ],\n        \"correctAnswer\": \"1\",\n        \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\n        \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\n        \"explanation\": \"How much does it cost significa Cuanto cuesta. What is your name significa Que es tu nombre.\",\n        \"point\": \"10\"\n      }\n    ]\n  } \n\n    \n// export const q =  {\n//     \"quizTitle\": \"React Quiz Component Demo\",\n//     \"quizSynopsis\": \"Bienvenido a este examen. Toma tu tiempo y recuerda las cosas que haz aprendido. Buenas suerte!\",\n//     \"questions\": [\n//       {\n//         \"question\": \"Como se dice, 'Como estas?' en Ingles?\",\n//         \"questionType\": \"text\",\n//         \"answerSelectionType\": \"single\",\n//         \"answers\": [\n//           \"How are you?\",\n//           \"How is your day?\",\n//           \"Nice to meet you\",\n//           \"Good afternoon\"\n//         ],\n//         \"correctAnswer\": \"1\",\n//         \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\n//         \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\n//         \"explanation\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\",\n//         \"point\": \"20\"\n//       },\n//       {\n//         \"question\": \"Como se dice 'Buenos dias' en Ingles?\",\n//         \"questionType\": \"text\",\n//         \"answerSelectionType\": \"single\",\n//         \"answers\": [\n//           \"Good afternonon\",\n//           \"Hi\",\n//           \"Good morning\",\n//           \"Good night\"\n//         ],\n//         \"correctAnswer\": \"3\",\n//         \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\n//         \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\n//         \"explanation\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\",\n//         \"point\": \"20\"\n//       },\n//       {\n//         \"question\": \"Como se dice 'Mucho gusto en cononcerte' en Ingles?\",\n//         \"questionType\": \"text\",\n//         \"answerSelectionType\": \"single\",\n//         \"answers\": [\n//           \"Good morning\",\n//           \"How are you?\",\n//           \"Nice to meet you\"\n//         ],\n//         \"correctAnswer\": \"3\",\n//         \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\n//         \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\n//         \"explanation\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\",\n//         \"point\": \"10\"\n//       },\n\n//     ]\n//   } ","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport marked from 'marked';\nimport dompurify from 'dompurify';\n\nclass Core extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      incorrectAnswer: false,\n      correctAnswer: false,\n      showNextQuestionButton: false,\n      endQuiz: false,\n      currentQuestionIndex: 0,\n      buttons: {},\n      buttonClasses: {},\n      correct: [],\n      incorrect: [],\n      userInput: [],\n      filteredValue: 'all',\n      userAttempt: 1,\n      showDefaultResult: this.props.showDefaultResult != undefined ? this.props.showDefaultResult : true,\n      onComplete: this.props.onComplete != undefined ? this.props.onComplete : null,\n      customResultPage: this.props.customResultPage != undefined ? this.props.customResultPage : null,\n      showInstantFeedback: this.props.showInstantFeedback != undefined ? this.props.showInstantFeedback : false,\n      continueTillCorrect: this.props.continueTillCorrect != undefined ? this.props.continueTillCorrect : false\n    };\n  }\n\n  checkAnswer = (index, correctAnswer, answerSelectionType) => {\n    const { correct, incorrect, currentQuestionIndex, continueTillCorrect, userInput } = this.state;\n    let { userAttempt, showNextQuestionButton } = this.state;\n\n    if(answerSelectionType == 'single') {\n      if(userInput[currentQuestionIndex] == undefined) {\n        userInput.push(index)\n      }\n  \n      if(index == correctAnswer) {\n        if( incorrect.indexOf(currentQuestionIndex) < 0 && correct.indexOf(currentQuestionIndex) < 0) {\n          correct.push(currentQuestionIndex);\n        }\n\n        let disabledAll = {\n          0: {disabled: true},\n          1: {disabled: true},\n          2: {disabled: true},\n          3: {disabled: true}\n        }\n  \n        this.setState((prevState) => {\n          const buttons = Object.assign(\n            {},\n            prevState.buttons,\n            {\n              ...disabledAll,\n              [index-1]: {\n                className: (index == correctAnswer)? \"correct\" : \"incorrect\"\n              },\n            }\n          );\n          return { buttons };\n        })\n  \n        this.setState({\n          correctAnswer: true,\n          incorrectAnswer: false,\n          correct: correct,\n          showNextQuestionButton: true,\n        })\n      } else {\n        if( correct.indexOf(currentQuestionIndex) < 0 && incorrect.indexOf(currentQuestionIndex) < 0 ) {\n          incorrect.push(currentQuestionIndex)\n        }\n  \n        if(continueTillCorrect) {\n          this.setState((prevState) => {\n            const buttons = Object.assign(\n              {},\n              prevState.buttons,\n              {\n                [index-1]: {\n                  disabled: !prevState.buttons[index-1]\n                }\n              }\n            );\n            return { buttons };\n          });\n        } else {\n          let disabledAll = {\n            0: {disabled: true},\n            1: {disabled: true},\n            2: {disabled: true},\n            3: {disabled: true}\n          }\n  \n          this.setState((prevState) => {\n            const buttons = Object.assign(\n              {},\n              prevState.buttons,\n              {\n                ...disabledAll,\n                [index-1]: {\n                  className: (index == correctAnswer)? \"correct\" : \"incorrect\"\n                },\n              }\n            );\n            return { buttons };\n          })\n  \n          this.setState({\n            showNextQuestionButton: true,\n          })\n        }\n  \n        this.setState({\n          incorrectAnswer: true,\n          correctAnswer: false,\n          incorrect: incorrect,\n        })\n      }\n    } else {\n      \n      let maxNumberOfMultipleSelection = correctAnswer.length;\n\n      if(userInput[currentQuestionIndex] == undefined) {\n        userInput[currentQuestionIndex] = []\n      }\n      \n      if(userInput[currentQuestionIndex].length < maxNumberOfMultipleSelection) {\n        userInput[currentQuestionIndex].push(index)\n\n        if(correctAnswer.includes(index)) {\n          if(userInput[currentQuestionIndex].length <= maxNumberOfMultipleSelection)  {\n          \n            this.setState((prevState) => {\n              const buttons = Object.assign(\n                {},\n                prevState.buttons,\n                {\n                  [index-1]: {\n                    disabled: !prevState.buttons[index-1],\n                    className: (correctAnswer.includes(index))? \"correct\" : \"incorrect\"\n                  },\n                }\n              );\n              return { buttons };\n            })\n  \n          \n          }\n        } else {\n          if(userInput[currentQuestionIndex].length <= maxNumberOfMultipleSelection)  { \n            this.setState((prevState) => {\n              const buttons = Object.assign(\n                {},\n                prevState.buttons,\n                {\n                  [index-1]: {\n                    className: (correctAnswer.includes(index))? \"correct\" : \"incorrect\"\n                  },\n                }\n              );\n              return { buttons };\n            })\n          }\n        }\n      }\n\n      if(maxNumberOfMultipleSelection == userAttempt) {\n        let cnt = 0;\n        for(var i=0; i<correctAnswer.length; i++) {\n          if(userInput[currentQuestionIndex].includes(correctAnswer[i])) {\n            cnt ++;\n          }\n        }\n\n        if(cnt == maxNumberOfMultipleSelection) {\n          correct.push(currentQuestionIndex);\n          this.setState({\n            correctAnswer: true,\n            incorrectAnswer: false,\n            correct: correct,\n            showNextQuestionButton: true,\n            userAttempt: 1\n          })\n        } else {\n          incorrect.push(currentQuestionIndex)\n          this.setState({\n            incorrectAnswer: true,\n            correctAnswer: false,\n            incorrect: incorrect,\n            showNextQuestionButton: true,\n            userAttempt: 1\n          })\n        }\n      } else {\n        if(!showNextQuestionButton) {\n          this.setState({\n            userInput,\n            userAttempt: userAttempt + 1\n          })\n        }\n      }\n    }\n  }\n\n  nextQuestion = (currentQuestionIndex) => {\n    const { questions } = this.props;\n\n    var initState = {\n      incorrectAnswer: false,\n      correctAnswer: false,\n      showNextQuestionButton: false,\n      buttons: {},\n    }\n\n    if(currentQuestionIndex + 1 == questions.length) {\n      this.setState({\n        ...initState,\n        endQuiz: true\n      })\n    } else {\n      this.setState({\n        ...initState,\n        currentQuestionIndex: currentQuestionIndex + 1,\n      })\n    }\n  }\n\n  renderMessageforCorrectAnswer = (question) => {\n    const defaultMessage = 'You are correct. Please click Next to continue.';\n    return question.messageForCorrectAnswer || defaultMessage;\n  }\n\n  renderMessageforIncorrectAnswer = (question) => {\n    const defaultMessage = 'Incorrect answer. Please try again.';\n    return question.messageForIncorrectAnswer || defaultMessage;\n  }\n\n  renderExplanation = (question, isResultPage) => {\n    const explanation = question.explanation;\n    if(!explanation) {\n      return (null);\n    }\n    \n    if(isResultPage) {\n      return (\n        <div className=\"explaination\">\n          {explanation}\n        </div>\n      )\n    }\n\n    return (\n      <div>\n        <br/>\n        {explanation}\n      </div>\n    )\n  }\n\n  handleChange = (event) => {\n    this.setState({filteredValue: event.target.value});\n  }\n\n  renderQuizResultFilter = () => {\n    const { appLocale } = this.props;\n    return (\n      <div className=\"quiz-result-filter\">\n          <select value={this.state.filteredValue} onChange={this.handleChange}>\n            <option value=\"all\">{appLocale.resultFilterAll}</option>\n            <option value=\"correct\">{appLocale.resultFilterCorrect}</option>\n            <option value=\"incorrect\">{appLocale.resultFilterIncorrect}</option>\n          </select>\n      </div>\n    );\n  }\n\n  renderAnswerInResult = (question, userInputIndex) => {\n    const { answers, correctAnswer, questionType } = question;\n    let { answerSelectionType } = question;\n    let answerBtnCorrectClassName;\n    let answerBtnIncorrectClassName;\n\n    // Default single to avoid code breaking due to automatic version upgrade\n    answerSelectionType = answerSelectionType || 'single';\n\n    return answers.map( (answer, index) => {\n      if(answerSelectionType == 'single') {\n        answerBtnCorrectClassName = ( index+1 == correctAnswer ? ' correct ': '' )\n        answerBtnIncorrectClassName = (userInputIndex != correctAnswer && index + 1 == userInputIndex ? ' incorrect ' : '')\n      } else {\n        answerBtnCorrectClassName = ( correctAnswer.includes(index + 1)  ? ' correct ': '' )\n        answerBtnIncorrectClassName = ( !correctAnswer.includes(index + 1) && userInputIndex.includes(index + 1) ? ' incorrect ' : '')\n      }\n\n      return(\n        <div key={index}>\n           <button disabled={true} className={\"answerBtn btn \" + answerBtnCorrectClassName + answerBtnIncorrectClassName}>\n            { questionType == 'text' && <span>{ answer }</span> }\n            { questionType == 'photo' && <img src={ answer } /> }\n          </button>\n        </div>\n      )\n    });\n  }\n\n  renderQuizResultQuestions = () => {\n    const { filteredValue } = this.state;\n    let { userInput } = this.state;\n    let { questions } = this.props;\n\n    if(filteredValue != 'all') {\n      questions = questions.filter( (question, index) => {\n        return this.state[filteredValue].indexOf(index) != -1\n      })\n\n      userInput = userInput.filter( (input, index) => {\n        return this.state[filteredValue].indexOf(index) != -1\n      })\n    }\n\n    return questions.map((question, index) => {\n      const userInputIndex = userInput[index];\n\n      // Default single to avoid code breaking due to automatic version upgrade\n      let answerSelectionType = question.answerSelectionType || 'single';\n      \n      return (\n        <div className=\"result-answer-wrapper\" key={index+1}>\n\n        <h3 dangerouslySetInnerHTML={this.rawMarkup(`Q${question.questionIndex}: ${question.question}`)}/> \n        {question.questionPic && <img src={question.questionPic}/>}\n        {\n          this.renderTags(answerSelectionType, question.correctAnswer.length)\n        }\n        <div className=\"result-answer\">\n            {\n              this.renderAnswerInResult(question, userInputIndex)\n            }\n        </div>\n        {this.renderExplanation(question, true)}\n      </div>\n      )\n    })\n  }\n\n  rawMarkup = (data) => {\n    const sanitizer = dompurify.sanitize;\n    let rawMarkup = marked(sanitizer(data));\n    return { __html: rawMarkup };\n  }\n\n  renderAnswers = (question, buttons) => {\n    const { answers, correctAnswer, questionType } = question;\n    let { answerSelectionType } = question;\n    \n    // Default single to avoid code breaking due to automatic version upgrade\n    answerSelectionType = answerSelectionType || 'single';\n\n    return answers.map( (answer, index) => {\n      if(buttons[index] != undefined) {\n        return (\n          <button key={index} disabled={ buttons[index].disabled || false } className={`${buttons[index].className} answerBtn btn`}  onClick={() => this.checkAnswer(index+1, correctAnswer, answerSelectionType)}>\n            { questionType == 'text' && <span>{answer}</span> }\n            { questionType == 'photo' && <img src={answer} /> }\n          </button>\n        )\n      } else {\n        return (\n          <button key={index} onClick={() => this.checkAnswer(index+1, correctAnswer, answerSelectionType)} className=\"answerBtn btn\">\n          { questionType == 'text' && answer }\n          { questionType == 'photo' && <img src={answer}/> }\n          </button>\n        )\n      }\n    })\n  }\n\n  renderTags(answerSelectionType, numberOfSelection) {\n    const { \n      appLocale: {\n        singleSelectionTagText,\n        multipleSelectionTagText,\n        pickNumberOfSelection\n      } \n    } = this.props;\n\n    return (\n      <div className=\"tag-container\">\n        {\n          answerSelectionType == 'single' && <span className=\"single selection-tag\"> { singleSelectionTagText }</span>\n        }\n        {\n          answerSelectionType == 'multiple' && <span className=\"multiple selection-tag\"> { multipleSelectionTagText }</span>\n        }\n        <span className=\"number-of-selection\">{ pickNumberOfSelection.replace(\"<numberOfSelection>\", numberOfSelection) }</span>\n      </div>\n      )\n  }\n\n  render() {\n    const { questions, appLocale } = this.props;\n    const { \n      correct, \n      incorrect, \n      userInput, \n      currentQuestionIndex, \n      correctAnswer, \n      incorrectAnswer, \n      endQuiz, \n      showInstantFeedback, \n      buttons, \n      onComplete, \n      showNextQuestionButton, \n      showDefaultResult, \n      customResultPage\n    } = this.state;\n\n    let question = questions[currentQuestionIndex];\n    let totalPoints = 0;\n    let correctPoints = 0;\n\n    for(var i=0; i<questions.length; i++) {\n      let point = questions[i].point || 0;\n      if(typeof point === 'string' || point instanceof String) {\n        point = parseInt(point)\n      }\n\n      totalPoints = totalPoints + point;\n\n      if(correct.includes(i)) {\n        correctPoints = correctPoints + point;\n      }\n    }\n\n    const questionSummary = {\n      numberOfQuestions: questions.length,\n      numberOfCorrectAnswers: correct.length,\n      numberOfIncorrectAnswers: incorrect.length,\n      questions: questions,\n      userInput: userInput,\n      totalPoints: totalPoints,\n      correctPoints: correctPoints\n    };\n\n    let { answerSelectionType } = question;\n\n    // Default single to avoid code breaking due to automatic version upgrade\n    answerSelectionType = answerSelectionType || 'single';\n    \n    return (\n      <div className=\"questionWrapper\">\n        {!endQuiz &&\n          <div className=\"questionWrapperBody\">\n            <div className=\"questionModal\">\n              {incorrectAnswer && showInstantFeedback && \n                <div className=\"alert incorrect\">{ this.renderMessageforIncorrectAnswer(question) }</div>\n              }\n              { correctAnswer && showInstantFeedback && \n                <div className=\"alert correct\">\n                  { this.renderMessageforCorrectAnswer(question) } \n                  { this.renderExplanation(question, false) }\n                </div>\n              }\n            </div>\n            <div>{ appLocale.question } { currentQuestionIndex + 1 }:</div>\n            <h3 dangerouslySetInnerHTML={this.rawMarkup(question.question)}/> \n            {question.questionPic && <img src={question.questionPic}/>}\n            {\n              this.renderTags(answerSelectionType, question.correctAnswer.length)\n            }\n            {\n              this.renderAnswers(question, buttons)\n            }\n            { showNextQuestionButton &&\n              <div><button onClick={() => this.nextQuestion(currentQuestionIndex)} className=\"nextQuestionBtn btn\">{appLocale.nextQuestionBtn}</button></div>\n            }\n          </div>\n        }\n        { endQuiz && showDefaultResult && customResultPage == null &&\n            <div className=\"card-body\">\n            <h2>\n              {appLocale.resultPageHeaderText.replace(\"<correctIndexLength>\", correct.length).replace(\"<questionLength>\", questions.length) } \n            </h2>\n            <h2>\n              { appLocale.resultPagePoint.replace(\"<correctPoints>\", correctPoints).replace(\"<totalPoints>\", totalPoints) }\n            </h2>\n            <br/> \n              { this.renderQuizResultFilter() }\n              { this.renderQuizResultQuestions() }\n            </div>\n        }\n\n        {\n          endQuiz && onComplete != undefined &&\n             onComplete(questionSummary)\n        }\n\n        {\n          endQuiz && !showDefaultResult  && customResultPage != undefined &&\n             customResultPage(questionSummary)\n        }\n        </div>\n    );\n  }\n}\n\nCore.propTypes = {\n  questions: PropTypes.array,\n  showDefaultResult: PropTypes.bool,\n  onComplete: PropTypes.func,\n  customResultPage: PropTypes.func,\n  showInstantFeedback: PropTypes.bool,\n  continueTillCorrect: PropTypes.bool,\n  appLocale: PropTypes.object\n};\n\nexport default Core;","export const defaultLocale =  {\n    \"landingHeaderText\": \"<questionLength> Preguntas\",\n    \"question\": \"Pregunta\",\n    \"startQuizBtn\": \"Empieza Examen\",\n    \"resultFilterAll\": \"Todos\",\n    \"resultFilterCorrect\": \"Correcto\",\n    \"resultFilterIncorrect\": \"Incorrecto\",\n    \"nextQuestionBtn\": \"Siguiente Pregunta\",\n    \"resultPageHeaderText\": \"Haz completado el examen. Recivistes <correctIndexLength> fuera de <questionLength> preguntas.\",\n    \"resultPagePoint\": \"Calificaste <correctPoints> fuera de <totalPoints>.\",\n    \"singleSelectionTagText\": \"Single Selection\",\n    \"multipleSelectionTagText\": \"Multiple Selection\",\n    \"pickNumberOfSelection\": \"Pick <numberOfSelection>\"\n  } ","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Core from './Core1';\nimport { defaultLocale } from './Locale2';\nimport \"./styles.css\";\n\nclass Quiz extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      start: false,\n    }\n    this.start = this.start.bind(this);\n  }\n\n  start = () => {\n    this.setState({start: true})\n  }\n\n  shuffleQuestions = (questions) => {\n    for (let i = questions.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [questions[i], questions[j]] = [questions[j], questions[i]];\n    }\n    return questions;\n  }\n\n  validateQuiz = (quiz) => {\n    if(!quiz) {\n      console.error(\"Quiz object is required.\");\n      return false;\n    } \n\n    const { questions } = quiz;\n    if(!questions ) {\n      console.error(\"Field 'questions' is required.\");\n      return false;\n    }\n\n    for(var i=0; i<questions.length; i++) {\n      const { question, questionType, questionPic, answerSelectionType, answers, correctAnswer } = questions[i];\n      if(!question) {\n        console.error(\"Field 'question' is required.\");\n        return false;\n      }\n  \n      if(!questionType) {\n        console.error(\"Field 'questionType' is required.\");\n        return false;\n      } else {\n        if(questionType != 'text' && questionType != 'photo') {\n          console.error(\"The value of 'questionType' is either 'text' or 'photo'.\");\n          return false;\n        }\n      }\n  \n      if(!answers) {\n        console.error(\"Field 'answers' is required.\");\n        return false;\n      } else {\n        if(!Array.isArray(answers)) {\n          console.error(\"Field 'answers' has to be an Array\");\n          return false;\n        } \n      }\n  \n      if(!correctAnswer) {\n        console.error(\"Field 'correctAnswer' is required.\");\n        return false;\n      }\n  \n      if(!answerSelectionType) {\n        // Default single to avoid code breaking due to automatic version upgrade\n        console.warn(\"Field answerSelectionType should be defined since v0.3.0. Use single by default.\")\n        answerSelectionType = answerSelectionType || 'single'; \n      }\n  \n      if(answerSelectionType == 'single' && !(typeof answerSelectionType === 'string' || answerSelectionType   instanceof String) ) {\n        console.error(\"answerSelectionType is single but expecting String in the field correctAnswer\");\n        return false;\n      }\n  \n      if(answerSelectionType == 'multiple' && !Array.isArray(correctAnswer)) {\n        console.error(\"answerSelectionType is multiple but expecting Array in the field correctAnswer\");\n        return false;\n      }\n    }\n\n    return  true;\n  }\n\n  render() {\n    const { quiz, shuffle, showDefaultResult, onComplete, customResultPage, showInstantFeedback, continueTillCorrect } = this.props;\n\n\n    if(!this.validateQuiz(quiz)) {\n      return (null)\n    }\n\n    const appLocale = {\n      ...defaultLocale,\n      ...quiz.appLocale\n    };\n    \n    let questions = quiz.questions;\n      if(shuffle) {\n        questions = this.shuffleQuestions(questions);\n      }\n\n      questions = questions.map((question, index) => ({\n        ...question, \n        questionIndex : index + 1\n      }));\n\n      return (\n        <div className=\"react-quiz-container\">\n          {!this.state.start &&\n            <div>\n              <h2>{quiz.quizTitle}</h2>\n              <div> {appLocale.landingHeaderText.replace(\"<questionLength>\" , quiz.questions.length )}</div>\n              { quiz.quizSynopsis && \n                  <div className=\"quiz-synopsis\">\n                      {quiz.quizSynopsis}\n                  </div> \n              }\n              <div className=\"startQuizWrapper\">\n                <button onClick={() => this.start()} className=\"startQuizBtn btn\">{appLocale.startQuizBtn}</button>\n              </div>\n            </div>\n          }\n\n          {\n            this.state.start && <Core questions={questions} showDefaultResult={showDefaultResult} onComplete={onComplete} customResultPage={customResultPage} showInstantFeedback={showInstantFeedback} continueTillCorrect={continueTillCorrect} appLocale={appLocale}/>\n          }\n        </div>\n      );\n    }\n}\n\nQuiz.propTypes = {\n  quiz: PropTypes.object,\n  shuffle: PropTypes.bool,\n  showDefaultResult: PropTypes.bool,\n  onComplete: PropTypes.func,\n  customResultPage: PropTypes.func,\n  showInstantFeedback: PropTypes.bool,\n  continueTillCorrect: PropTypes.bool\n};\n\nexport default Quiz;","import React from 'react';\nimport { quiz3 } from './quiz';\nimport Quiz from '../../components/PhraseQuiz/Quiz1';\n  \n// import React from \"react\";\n// import { render } from \"react-dom\";\n// import Quiz from \"../../lib/Quiz\";\n// import {quiz} from './quiz';\n\n/**\n * @author\n * @function Quiz\n */\n\nconst Quiz1 = () => {\n  return (\n      <Quiz quiz={quiz3} shuffle={true} showInstantFeedback={true} continueTillCorrect={true}/>\n\n  );\n}\n\nexport default Quiz1;","  \nexport const quiz6 =  {\n    \"quizTitle\": \"Examen de Frases Comunes\",\n    \"quizSynopsis\": \"Bienvenido a este examen. Toma tu tiempo y recuerda las cosas que haz aprendido. Buenas suerte!\",\n    \"questions\": [\n      {\n        \"question\": \"Acual imagen es de la letra g\",\n        \"questionType\": \"photo\",\n        \"answerSelectionType\": \"single\",\n        \"answers\": [\n          \"https://live.staticflickr.com/65535/50112996008_25b6b31967.jpg\",\n          \"https://live.staticflickr.com/65535/50113798057_ded6d4292c.jpg\",\n          \"https://live.staticflickr.com/65535/50113797952_4e2c80ba00.jpg\"\n        ],\n        \"correctAnswer\": \"1\",\n        \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\n        \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\n        \"explanation\": \"Vegetable significa vegetal. Meat significa carne. Dairy Products significa products lacteos\",\n        \"point\": \"20\"\n      },\n      {\n        \"question\": \"Como se escribe Manzana en ingles?\",\n        \"questionType\": \"text\",\n        \"answerSelectionType\": \"single\",\n        \"answers\": [\n          \"Grass\",\n          \"Hat\",\n          \"Apple\"\n        ],\n        \"correctAnswer\": \"3\",\n        \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\n        \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\n        \"explanation\": \"Onion significa Cebolla. Egg significa Huevo, Flour significa Harina\",\n        \"point\": \"20\"\n      },\n      {\n        \"question\": \"Como se escribe Raton en ingles?\",\n        \"questionType\": \"text\",\n        \"answerSelectionType\": \"single\",\n        \"answers\": [\n          \"Mouse\",\n          \"Vegetables\",\n          \"Ear\"\n        ],\n        \"correctAnswer\": \"1\",\n        \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\n        \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\n        \"explanation\": \"Rice significa arroz, Ham significa hamon, Pear significa pera\",\n        \"point\": \"10\"\n      },\n      {\n        \"question\": \"Como se escribe Pescado en ingles\",\n        \"questionType\": \"text\",\n        \"answerSelectionType\": \"single\",\n        \"answers\": [\n          \"Zebra\",\n          \"Boy\",\n          \"Orange\",\n          \"Fish\"\n        ],\n        \"correctAnswer\": \"4\",\n        \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\n        \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\n        \"explanation\": \"Milk significa leche, Pepper significa pimienta, Cereal significa cereal\",\n        \"point\": \"10\"\n      },\n      {\n        \"question\": \"Como se escribe Anillo en ingles?\",\n        \"questionType\": \"text\",\n        \"answerSelectionType\": \"single\",\n        \"answers\": [\n          \"Ring\",\n          \"Ice cube\",\n          \"Window\"\n        ],\n        \"correctAnswer\": \"1\",\n        \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\n        \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\n        \"explanation\": \"Cream significa crema, sour cream significa crema acida\",\n        \"point\": \"10\"\n      },\n      {\n        \"question\": \"Como se escribe Arriba en ingles?\",\n        \"questionType\": \"text\",\n        \"answerSelectionType\": \"single\",\n        \"answers\": [\n          \"Yoyo\",\n          \"Cat\",\n          \"Lion\",\n          \"Up\"\n        ],\n        \"correctAnswer\": \"4\",\n        \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\n        \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\n        \"explanation\": \"Lettuce significa lechuga. Spinach significa espinaca. Celery significa apio. Todos estos son vegetales.\",\n        \"point\": \"10\"\n      }\n    ]\n  } \n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport marked from 'marked';\nimport dompurify from 'dompurify';\n\nclass Core extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      incorrectAnswer: false,\n      correctAnswer: false,\n      showNextQuestionButton: false,\n      endQuiz: false,\n      currentQuestionIndex: 0,\n      buttons: {},\n      buttonClasses: {},\n      correct: [],\n      incorrect: [],\n      userInput: [],\n      filteredValue: 'all',\n      userAttempt: 1,\n      showDefaultResult: this.props.showDefaultResult != undefined ? this.props.showDefaultResult : true,\n      onComplete: this.props.onComplete != undefined ? this.props.onComplete : null,\n      customResultPage: this.props.customResultPage != undefined ? this.props.customResultPage : null,\n      showInstantFeedback: this.props.showInstantFeedback != undefined ? this.props.showInstantFeedback : false,\n      continueTillCorrect: this.props.continueTillCorrect != undefined ? this.props.continueTillCorrect : false\n    };\n  }\n\n  checkAnswer = (index, correctAnswer, answerSelectionType) => {\n    const { correct, incorrect, currentQuestionIndex, continueTillCorrect, userInput } = this.state;\n    let { userAttempt, showNextQuestionButton } = this.state;\n\n    if(answerSelectionType == 'single') {\n      if(userInput[currentQuestionIndex] == undefined) {\n        userInput.push(index)\n      }\n  \n      if(index == correctAnswer) {\n        if( incorrect.indexOf(currentQuestionIndex) < 0 && correct.indexOf(currentQuestionIndex) < 0) {\n          correct.push(currentQuestionIndex);\n        }\n\n        let disabledAll = {\n          0: {disabled: true},\n          1: {disabled: true},\n          2: {disabled: true},\n          3: {disabled: true}\n        }\n  \n        this.setState((prevState) => {\n          const buttons = Object.assign(\n            {},\n            prevState.buttons,\n            {\n              ...disabledAll,\n              [index-1]: {\n                className: (index == correctAnswer)? \"correct\" : \"incorrect\"\n              },\n            }\n          );\n          return { buttons };\n        })\n  \n        this.setState({\n          correctAnswer: true,\n          incorrectAnswer: false,\n          correct: correct,\n          showNextQuestionButton: true,\n        })\n      } else {\n        if( correct.indexOf(currentQuestionIndex) < 0 && incorrect.indexOf(currentQuestionIndex) < 0 ) {\n          incorrect.push(currentQuestionIndex)\n        }\n  \n        if(continueTillCorrect) {\n          this.setState((prevState) => {\n            const buttons = Object.assign(\n              {},\n              prevState.buttons,\n              {\n                [index-1]: {\n                  disabled: !prevState.buttons[index-1]\n                }\n              }\n            );\n            return { buttons };\n          });\n        } else {\n          let disabledAll = {\n            0: {disabled: true},\n            1: {disabled: true},\n            2: {disabled: true},\n            3: {disabled: true}\n          }\n  \n          this.setState((prevState) => {\n            const buttons = Object.assign(\n              {},\n              prevState.buttons,\n              {\n                ...disabledAll,\n                [index-1]: {\n                  className: (index == correctAnswer)? \"correct\" : \"incorrect\"\n                },\n              }\n            );\n            return { buttons };\n          })\n  \n          this.setState({\n            showNextQuestionButton: true,\n          })\n        }\n  \n        this.setState({\n          incorrectAnswer: true,\n          correctAnswer: false,\n          incorrect: incorrect,\n        })\n      }\n    } else {\n      \n      let maxNumberOfMultipleSelection = correctAnswer.length;\n\n      if(userInput[currentQuestionIndex] == undefined) {\n        userInput[currentQuestionIndex] = []\n      }\n      \n      if(userInput[currentQuestionIndex].length < maxNumberOfMultipleSelection) {\n        userInput[currentQuestionIndex].push(index)\n\n        if(correctAnswer.includes(index)) {\n          if(userInput[currentQuestionIndex].length <= maxNumberOfMultipleSelection)  {\n          \n            this.setState((prevState) => {\n              const buttons = Object.assign(\n                {},\n                prevState.buttons,\n                {\n                  [index-1]: {\n                    disabled: !prevState.buttons[index-1],\n                    className: (correctAnswer.includes(index))? \"correct\" : \"incorrect\"\n                  },\n                }\n              );\n              return { buttons };\n            })\n  \n          \n          }\n        } else {\n          if(userInput[currentQuestionIndex].length <= maxNumberOfMultipleSelection)  { \n            this.setState((prevState) => {\n              const buttons = Object.assign(\n                {},\n                prevState.buttons,\n                {\n                  [index-1]: {\n                    className: (correctAnswer.includes(index))? \"correct\" : \"incorrect\"\n                  },\n                }\n              );\n              return { buttons };\n            })\n          }\n        }\n      }\n\n      if(maxNumberOfMultipleSelection == userAttempt) {\n        let cnt = 0;\n        for(var i=0; i<correctAnswer.length; i++) {\n          if(userInput[currentQuestionIndex].includes(correctAnswer[i])) {\n            cnt ++;\n          }\n        }\n\n        if(cnt == maxNumberOfMultipleSelection) {\n          correct.push(currentQuestionIndex);\n          this.setState({\n            correctAnswer: true,\n            incorrectAnswer: false,\n            correct: correct,\n            showNextQuestionButton: true,\n            userAttempt: 1\n          })\n        } else {\n          incorrect.push(currentQuestionIndex)\n          this.setState({\n            incorrectAnswer: true,\n            correctAnswer: false,\n            incorrect: incorrect,\n            showNextQuestionButton: true,\n            userAttempt: 1\n          })\n        }\n      } else {\n        if(!showNextQuestionButton) {\n          this.setState({\n            userInput,\n            userAttempt: userAttempt + 1\n          })\n        }\n      }\n    }\n  }\n\n  nextQuestion = (currentQuestionIndex) => {\n    const { questions } = this.props;\n\n    var initState = {\n      incorrectAnswer: false,\n      correctAnswer: false,\n      showNextQuestionButton: false,\n      buttons: {},\n    }\n\n    if(currentQuestionIndex + 1 == questions.length) {\n      this.setState({\n        ...initState,\n        endQuiz: true\n      })\n    } else {\n      this.setState({\n        ...initState,\n        currentQuestionIndex: currentQuestionIndex + 1,\n      })\n    }\n  }\n\n  renderMessageforCorrectAnswer = (question) => {\n    const defaultMessage = 'You are correct. Please click Next to continue.';\n    return question.messageForCorrectAnswer || defaultMessage;\n  }\n\n  renderMessageforIncorrectAnswer = (question) => {\n    const defaultMessage = 'Incorrect answer. Please try again.';\n    return question.messageForIncorrectAnswer || defaultMessage;\n  }\n\n  renderExplanation = (question, isResultPage) => {\n    const explanation = question.explanation;\n    if(!explanation) {\n      return (null);\n    }\n    \n    if(isResultPage) {\n      return (\n        <div className=\"explaination\">\n          {explanation}\n        </div>\n      )\n    }\n\n    return (\n      <div>\n        <br/>\n        {explanation}\n      </div>\n    )\n  }\n\n  handleChange = (event) => {\n    this.setState({filteredValue: event.target.value});\n  }\n\n  renderQuizResultFilter = () => {\n    const { appLocale } = this.props;\n    return (\n      <div className=\"quiz-result-filter\">\n          <select value={this.state.filteredValue} onChange={this.handleChange}>\n            <option value=\"all\">{appLocale.resultFilterAll}</option>\n            <option value=\"correct\">{appLocale.resultFilterCorrect}</option>\n            <option value=\"incorrect\">{appLocale.resultFilterIncorrect}</option>\n          </select>\n      </div>\n    );\n  }\n\n  renderAnswerInResult = (question, userInputIndex) => {\n    const { answers, correctAnswer, questionType } = question;\n    let { answerSelectionType } = question;\n    let answerBtnCorrectClassName;\n    let answerBtnIncorrectClassName;\n\n    // Default single to avoid code breaking due to automatic version upgrade\n    answerSelectionType = answerSelectionType || 'single';\n\n    return answers.map( (answer, index) => {\n      if(answerSelectionType == 'single') {\n        answerBtnCorrectClassName = ( index+1 == correctAnswer ? ' correct ': '' )\n        answerBtnIncorrectClassName = (userInputIndex != correctAnswer && index + 1 == userInputIndex ? ' incorrect ' : '')\n      } else {\n        answerBtnCorrectClassName = ( correctAnswer.includes(index + 1)  ? ' correct ': '' )\n        answerBtnIncorrectClassName = ( !correctAnswer.includes(index + 1) && userInputIndex.includes(index + 1) ? ' incorrect ' : '')\n      }\n\n      return(\n        <div key={index}>\n           <button disabled={true} className={\"answerBtn btn \" + answerBtnCorrectClassName + answerBtnIncorrectClassName}>\n            { questionType == 'text' && <span>{ answer }</span> }\n            { questionType == 'photo' && <img src={ answer } /> }\n          </button>\n        </div>\n      )\n    });\n  }\n\n  renderQuizResultQuestions = () => {\n    const { filteredValue } = this.state;\n    let { userInput } = this.state;\n    let { questions } = this.props;\n\n    if(filteredValue != 'all') {\n      questions = questions.filter( (question, index) => {\n        return this.state[filteredValue].indexOf(index) != -1\n      })\n\n      userInput = userInput.filter( (input, index) => {\n        return this.state[filteredValue].indexOf(index) != -1\n      })\n    }\n\n    return questions.map((question, index) => {\n      const userInputIndex = userInput[index];\n\n      // Default single to avoid code breaking due to automatic version upgrade\n      let answerSelectionType = question.answerSelectionType || 'single';\n      \n      return (\n        <div className=\"result-answer-wrapper\" key={index+1}>\n\n        <h3 dangerouslySetInnerHTML={this.rawMarkup(`Q${question.questionIndex}: ${question.question}`)}/> \n        {question.questionPic && <img src={question.questionPic}/>}\n        {\n          this.renderTags(answerSelectionType, question.correctAnswer.length)\n        }\n        <div className=\"result-answer\">\n            {\n              this.renderAnswerInResult(question, userInputIndex)\n            }\n        </div>\n        {this.renderExplanation(question, true)}\n      </div>\n      )\n    })\n  }\n\n  rawMarkup = (data) => {\n    const sanitizer = dompurify.sanitize;\n    let rawMarkup = marked(sanitizer(data));\n    return { __html: rawMarkup };\n  }\n\n  renderAnswers = (question, buttons) => {\n    const { answers, correctAnswer, questionType } = question;\n    let { answerSelectionType } = question;\n    \n    // Default single to avoid code breaking due to automatic version upgrade\n    answerSelectionType = answerSelectionType || 'single';\n\n    return answers.map( (answer, index) => {\n      if(buttons[index] != undefined) {\n        return (\n          <button key={index} disabled={ buttons[index].disabled || false } className={`${buttons[index].className} answerBtn btn`}  onClick={() => this.checkAnswer(index+1, correctAnswer, answerSelectionType)}>\n            { questionType == 'text' && <span>{answer}</span> }\n            { questionType == 'photo' && <img src={answer} /> }\n          </button>\n        )\n      } else {\n        return (\n          <button key={index} onClick={() => this.checkAnswer(index+1, correctAnswer, answerSelectionType)} className=\"answerBtn btn\">\n          { questionType == 'text' && answer }\n          { questionType == 'photo' && <img src={answer}/> }\n          </button>\n        )\n      }\n    })\n  }\n\n  renderTags(answerSelectionType, numberOfSelection) {\n    const { \n      appLocale: {\n        singleSelectionTagText,\n        multipleSelectionTagText,\n        pickNumberOfSelection\n      } \n    } = this.props;\n\n    return (\n      <div className=\"tag-container\">\n        {\n          answerSelectionType == 'single' && <span className=\"single selection-tag\"> { singleSelectionTagText }</span>\n        }\n        {\n          answerSelectionType == 'multiple' && <span className=\"multiple selection-tag\"> { multipleSelectionTagText }</span>\n        }\n        <span className=\"number-of-selection\">{ pickNumberOfSelection.replace(\"<numberOfSelection>\", numberOfSelection) }</span>\n      </div>\n      )\n  }\n\n  render() {\n    const { questions, appLocale } = this.props;\n    const { \n      correct, \n      incorrect, \n      userInput, \n      currentQuestionIndex, \n      correctAnswer, \n      incorrectAnswer, \n      endQuiz, \n      showInstantFeedback, \n      buttons, \n      onComplete, \n      showNextQuestionButton, \n      showDefaultResult, \n      customResultPage\n    } = this.state;\n\n    let question = questions[currentQuestionIndex];\n    let totalPoints = 0;\n    let correctPoints = 0;\n\n    for(var i=0; i<questions.length; i++) {\n      let point = questions[i].point || 0;\n      if(typeof point === 'string' || point instanceof String) {\n        point = parseInt(point)\n      }\n\n      totalPoints = totalPoints + point;\n\n      if(correct.includes(i)) {\n        correctPoints = correctPoints + point;\n      }\n    }\n\n    const questionSummary = {\n      numberOfQuestions: questions.length,\n      numberOfCorrectAnswers: correct.length,\n      numberOfIncorrectAnswers: incorrect.length,\n      questions: questions,\n      userInput: userInput,\n      totalPoints: totalPoints,\n      correctPoints: correctPoints\n    };\n\n    let { answerSelectionType } = question;\n\n    // Default single to avoid code breaking due to automatic version upgrade\n    answerSelectionType = answerSelectionType || 'single';\n    \n    return (\n      <div className=\"questionWrapper\">\n        {!endQuiz &&\n          <div className=\"questionWrapperBody\">\n            <div className=\"questionModal\">\n              {incorrectAnswer && showInstantFeedback && \n                <div className=\"alert incorrect\">{ this.renderMessageforIncorrectAnswer(question) }</div>\n              }\n              { correctAnswer && showInstantFeedback && \n                <div className=\"alert correct\">\n                  { this.renderMessageforCorrectAnswer(question) } \n                  { this.renderExplanation(question, false) }\n                </div>\n              }\n            </div>\n            <div>{ appLocale.question } { currentQuestionIndex + 1 }:</div>\n            <h3 dangerouslySetInnerHTML={this.rawMarkup(question.question)}/> \n            {question.questionPic && <img src={question.questionPic}/>}\n            {\n              this.renderTags(answerSelectionType, question.correctAnswer.length)\n            }\n            {\n              this.renderAnswers(question, buttons)\n            }\n            { showNextQuestionButton &&\n              <div><button onClick={() => this.nextQuestion(currentQuestionIndex)} className=\"nextQuestionBtn btn\">{appLocale.nextQuestionBtn}</button></div>\n            }\n          </div>\n        }\n        { endQuiz && showDefaultResult && customResultPage == null &&\n            <div className=\"card-body\">\n            <h2>\n              {appLocale.resultPageHeaderText.replace(\"<correctIndexLength>\", correct.length).replace(\"<questionLength>\", questions.length) } \n            </h2>\n            <h2>\n              { appLocale.resultPagePoint.replace(\"<correctPoints>\", correctPoints).replace(\"<totalPoints>\", totalPoints) }\n            </h2>\n            <br/> \n              { this.renderQuizResultFilter() }\n              { this.renderQuizResultQuestions() }\n            </div>\n        }\n\n        {\n          endQuiz && onComplete != undefined &&\n             onComplete(questionSummary)\n        }\n\n        {\n          endQuiz && !showDefaultResult  && customResultPage != undefined &&\n             customResultPage(questionSummary)\n        }\n        </div>\n    );\n  }\n}\n\nCore.propTypes = {\n  questions: PropTypes.array,\n  showDefaultResult: PropTypes.bool,\n  onComplete: PropTypes.func,\n  customResultPage: PropTypes.func,\n  showInstantFeedback: PropTypes.bool,\n  continueTillCorrect: PropTypes.bool,\n  appLocale: PropTypes.object\n};\n\nexport default Core;","export const defaultLocale =  {\n    \"landingHeaderText\": \"<questionLength> Preguntas\",\n    \"question\": \"Pregunta\",\n    \"startQuizBtn\": \"Empieza Examen\",\n    \"resultFilterAll\": \"Todos\",\n    \"resultFilterCorrect\": \"Correcto\",\n    \"resultFilterIncorrect\": \"Incorrecto\",\n    \"nextQuestionBtn\": \"Siguiente Pregunta\",\n    \"resultPageHeaderText\": \"Haz completado el examen. Recivistes <correctIndexLength> fuera de <questionLength> preguntas.\",\n    \"resultPagePoint\": \"Calificaste <correctPoints> fuera de <totalPoints>.\",\n    \"singleSelectionTagText\": \"Single Selection\",\n    \"multipleSelectionTagText\": \"Multiple Selection\",\n    \"pickNumberOfSelection\": \"Pick <numberOfSelection>\"\n  } ","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Core from './Core';\nimport { defaultLocale } from './Locale';\nimport \"./styles.css\";\n\nclass Quiz extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      start: false,\n    }\n    this.start = this.start.bind(this);\n  }\n\n  start = () => {\n    this.setState({start: true})\n  }\n\n  shuffleQuestions = (questions) => {\n    for (let i = questions.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [questions[i], questions[j]] = [questions[j], questions[i]];\n    }\n    return questions;\n  }\n\n  validateQuiz = (quiz) => {\n    if(!quiz) {\n      console.error(\"Quiz object is required.\");\n      return false;\n    } \n\n    const { questions } = quiz;\n    if(!questions ) {\n      console.error(\"Field 'questions' is required.\");\n      return false;\n    }\n\n    for(var i=0; i<questions.length; i++) {\n      const { question, questionType, questionPic, answerSelectionType, answers, correctAnswer } = questions[i];\n      if(!question) {\n        console.error(\"Field 'question' is required.\");\n        return false;\n      }\n  \n      if(!questionType) {\n        console.error(\"Field 'questionType' is required.\");\n        return false;\n      } else {\n        if(questionType != 'text' && questionType != 'photo') {\n          console.error(\"The value of 'questionType' is either 'text' or 'photo'.\");\n          return false;\n        }\n      }\n  \n      if(!answers) {\n        console.error(\"Field 'answers' is required.\");\n        return false;\n      } else {\n        if(!Array.isArray(answers)) {\n          console.error(\"Field 'answers' has to be an Array\");\n          return false;\n        } \n      }\n  \n      if(!correctAnswer) {\n        console.error(\"Field 'correctAnswer' is required.\");\n        return false;\n      }\n  \n      if(!answerSelectionType) {\n        // Default single to avoid code breaking due to automatic version upgrade\n        console.warn(\"Field answerSelectionType should be defined since v0.3.0. Use single by default.\")\n        answerSelectionType = answerSelectionType || 'single'; \n      }\n  \n      if(answerSelectionType == 'single' && !(typeof answerSelectionType === 'string' || answerSelectionType   instanceof String) ) {\n        console.error(\"answerSelectionType is single but expecting String in the field correctAnswer\");\n        return false;\n      }\n  \n      if(answerSelectionType == 'multiple' && !Array.isArray(correctAnswer)) {\n        console.error(\"answerSelectionType is multiple but expecting Array in the field correctAnswer\");\n        return false;\n      }\n    }\n\n    return  true;\n  }\n\n  render() {\n    const { quiz, shuffle, showDefaultResult, onComplete, customResultPage, showInstantFeedback, continueTillCorrect } = this.props;\n\n\n    if(!this.validateQuiz(quiz)) {\n      return (null)\n    }\n\n    const appLocale = {\n      ...defaultLocale,\n      ...quiz.appLocale\n    };\n    \n    let questions = quiz.questions;\n      if(shuffle) {\n        questions = this.shuffleQuestions(questions);\n      }\n\n      questions = questions.map((question, index) => ({\n        ...question, \n        questionIndex : index + 1\n      }));\n\n      return (\n        <div className=\"react-quiz-container\">\n          {!this.state.start &&\n            <div>\n              <h2>{quiz.quizTitle}</h2>\n              <div> {appLocale.landingHeaderText.replace(\"<questionLength>\" , quiz.questions.length )}</div>\n              { quiz.quizSynopsis && \n                  <div className=\"quiz-synopsis\">\n                      {quiz.quizSynopsis}\n                  </div> \n              }\n              <div className=\"startQuizWrapper\">\n                <button onClick={() => this.start()} className=\"startQuizBtn btn\">{appLocale.startQuizBtn}</button>\n              </div>\n            </div>\n          }\n\n          {\n            this.state.start && <Core questions={questions} showDefaultResult={showDefaultResult} onComplete={onComplete} customResultPage={customResultPage} showInstantFeedback={showInstantFeedback} continueTillCorrect={continueTillCorrect} appLocale={appLocale}/>\n          }\n        </div>\n      );\n    }\n}\n\nQuiz.propTypes = {\n  quiz: PropTypes.object,\n  shuffle: PropTypes.bool,\n  showDefaultResult: PropTypes.bool,\n  onComplete: PropTypes.func,\n  customResultPage: PropTypes.func,\n  showInstantFeedback: PropTypes.bool,\n  continueTillCorrect: PropTypes.bool\n};\n\nexport default Quiz;","import React from 'react';\n// import { quiz5 } from '../FoodQ/quiz';\n// import Quiz from '../../components/FoodQuiz/Quiz2';\n\n// import { quiz2 } from '../PeopleQ/quiz';\n// import Quiz2 from '../../components/PeopleQuiz/Quiz3';\n\n// import { quiz3 } from '../PhraseQ/quiz';\n// import Quiz3 from '../../components/PhraseQuiz/Quiz1';\n\nimport { quiz6 } from '../AlphabetQ/quiz';\nimport Quiz1 from '../../components/AlphabetQuiz/Quiz';\n\nimport { quiz3 } from '../PhraseQ/quiz';\nimport Quiz from '../../components/PhraseQuiz/Quiz1';\n\nimport { quiz5 } from '../FoodQ/quiz';\nimport Quiz4 from '../../components/FoodQuiz/Quiz2';\n/**\n * @author\n * @function Food\n */\nconst AllQuizes = () => {\n    return(\n        <section className=\"container\">\n\n            <Quiz1 quiz={quiz6} shuffle={true} showInstantFeedback={true} continueTillCorrect={true}/>\n            <Quiz quiz={quiz3} shuffle={true} showInstantFeedback={true} continueTillCorrect={true}/>\n            <Quiz4 quiz={quiz5} shuffle={true} showInstantFeedback={true} continueTillCorrect={true}/>\n\n            {/* <FoodNavbar {...props}/> */}\n        </section>\n    );\n}\n\nexport default AllQuizes;","import React from 'react';\nimport { quiz1 } from './quiz';\nimport Quiz from '../../components/FoodQuiz/Quiz2';\nimport FoodNavbar from '../../components/FoodNavbar';\nimport { quiz5 } from './quiz';\nimport Quiz4 from '../../components/FoodQuiz/Quiz2';\n\n\n/**\n * @author\n * @function Quiz\n */\n\nconst Quiz2 = props => {\n  return (\n    <section className=\"container\">\n\n      {/* <FoodNavbar {...props}/> */}\n      <Quiz4 quiz={quiz5} shuffle={true} showInstantFeedback={true} continueTillCorrect={true}/>\n    </section>\n  );\n}\n\nexport default Quiz2;","  \nexport const quiz =  {\n    \"quizTitle\": \"Examen de Saludos\",\n    \"quizSynopsis\": \"Bienvenido a este examen. Toma tu tiempo y recuerda las cosas que haz aprendido. Buenas suerte!\",\n    \"questions\": [\n      {\n        \"question\": \"Como se dice, 'Como estas?' en Ingles?\",\n        \"questionType\": \"text\",\n        \"answerSelectionType\": \"single\",\n        \"answers\": [\n          \"How are you?\",\n          \"How is your day?\",\n          \"Nice to meet you\",\n          \"Good afternoon\"\n        ],\n        \"correctAnswer\": \"1\",\n        \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\n        \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\n        \"explanation\": \"How is your day significa Como esta tu dia. Nice to meet you significa Gusto en conocerte. Good afternoon significa Buenas tardes.\",\n        \"point\": \"20\"\n      },\n      {\n        \"question\": \"Como se dice 'Buenos dias' en Ingles?\",\n        \"questionType\": \"text\",\n        \"answerSelectionType\": \"single\",\n        \"answers\": [\n          \"Good afternonon\",\n          \"Hi\",\n          \"Good morning\",\n          \"Good night\"\n        ],\n        \"correctAnswer\": \"3\",\n        \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\n        \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\n        \"explanation\": \"Good afternoon significa buenas tardes, Hi significa Hola, Good night significa Buenas noches\",\n        \"point\": \"20\"\n      },\n      {\n        \"question\": \"Como se dice 'Mucho gusto en cononcerte' en Ingles?\",\n        \"questionType\": \"text\",\n        \"answerSelectionType\": \"single\",\n        \"answers\": [\n          \"Good morning\",\n          \"How are you?\",\n          \"Nice to meet you\"\n        ],\n        \"correctAnswer\": \"3\",\n        \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\n        \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\n        \"explanation\": \"Good morning significa Buenos dias, How are you significa Como estas\",\n        \"point\": \"10\"\n      },\n\n    ]\n  } \n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport marked from 'marked';\nimport dompurify from 'dompurify';\n\nclass Core extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      incorrectAnswer: false,\n      correctAnswer: false,\n      showNextQuestionButton: false,\n      endQuiz: false,\n      currentQuestionIndex: 0,\n      buttons: {},\n      buttonClasses: {},\n      correct: [],\n      incorrect: [],\n      userInput: [],\n      filteredValue: 'all',\n      userAttempt: 1,\n      showDefaultResult: this.props.showDefaultResult != undefined ? this.props.showDefaultResult : true,\n      onComplete: this.props.onComplete != undefined ? this.props.onComplete : null,\n      customResultPage: this.props.customResultPage != undefined ? this.props.customResultPage : null,\n      showInstantFeedback: this.props.showInstantFeedback != undefined ? this.props.showInstantFeedback : false,\n      continueTillCorrect: this.props.continueTillCorrect != undefined ? this.props.continueTillCorrect : false\n    };\n  }\n\n  checkAnswer = (index, correctAnswer, answerSelectionType) => {\n    const { correct, incorrect, currentQuestionIndex, continueTillCorrect, userInput } = this.state;\n    let { userAttempt, showNextQuestionButton } = this.state;\n\n    if(answerSelectionType == 'single') {\n      if(userInput[currentQuestionIndex] == undefined) {\n        userInput.push(index)\n      }\n  \n      if(index == correctAnswer) {\n        if( incorrect.indexOf(currentQuestionIndex) < 0 && correct.indexOf(currentQuestionIndex) < 0) {\n          correct.push(currentQuestionIndex);\n        }\n\n        let disabledAll = {\n          0: {disabled: true},\n          1: {disabled: true},\n          2: {disabled: true},\n          3: {disabled: true}\n        }\n  \n        this.setState((prevState) => {\n          const buttons = Object.assign(\n            {},\n            prevState.buttons,\n            {\n              ...disabledAll,\n              [index-1]: {\n                className: (index == correctAnswer)? \"correct\" : \"incorrect\"\n              },\n            }\n          );\n          return { buttons };\n        })\n  \n        this.setState({\n          correctAnswer: true,\n          incorrectAnswer: false,\n          correct: correct,\n          showNextQuestionButton: true,\n        })\n      } else {\n        if( correct.indexOf(currentQuestionIndex) < 0 && incorrect.indexOf(currentQuestionIndex) < 0 ) {\n          incorrect.push(currentQuestionIndex)\n        }\n  \n        if(continueTillCorrect) {\n          this.setState((prevState) => {\n            const buttons = Object.assign(\n              {},\n              prevState.buttons,\n              {\n                [index-1]: {\n                  disabled: !prevState.buttons[index-1]\n                }\n              }\n            );\n            return { buttons };\n          });\n        } else {\n          let disabledAll = {\n            0: {disabled: true},\n            1: {disabled: true},\n            2: {disabled: true},\n            3: {disabled: true}\n          }\n  \n          this.setState((prevState) => {\n            const buttons = Object.assign(\n              {},\n              prevState.buttons,\n              {\n                ...disabledAll,\n                [index-1]: {\n                  className: (index == correctAnswer)? \"correct\" : \"incorrect\"\n                },\n              }\n            );\n            return { buttons };\n          })\n  \n          this.setState({\n            showNextQuestionButton: true,\n          })\n        }\n  \n        this.setState({\n          incorrectAnswer: true,\n          correctAnswer: false,\n          incorrect: incorrect,\n        })\n      }\n    } else {\n      \n      let maxNumberOfMultipleSelection = correctAnswer.length;\n\n      if(userInput[currentQuestionIndex] == undefined) {\n        userInput[currentQuestionIndex] = []\n      }\n      \n      if(userInput[currentQuestionIndex].length < maxNumberOfMultipleSelection) {\n        userInput[currentQuestionIndex].push(index)\n\n        if(correctAnswer.includes(index)) {\n          if(userInput[currentQuestionIndex].length <= maxNumberOfMultipleSelection)  {\n          \n            this.setState((prevState) => {\n              const buttons = Object.assign(\n                {},\n                prevState.buttons,\n                {\n                  [index-1]: {\n                    disabled: !prevState.buttons[index-1],\n                    className: (correctAnswer.includes(index))? \"correct\" : \"incorrect\"\n                  },\n                }\n              );\n              return { buttons };\n            })\n  \n          \n          }\n        } else {\n          if(userInput[currentQuestionIndex].length <= maxNumberOfMultipleSelection)  { \n            this.setState((prevState) => {\n              const buttons = Object.assign(\n                {},\n                prevState.buttons,\n                {\n                  [index-1]: {\n                    className: (correctAnswer.includes(index))? \"correct\" : \"incorrect\"\n                  },\n                }\n              );\n              return { buttons };\n            })\n          }\n        }\n      }\n\n      if(maxNumberOfMultipleSelection == userAttempt) {\n        let cnt = 0;\n        for(var i=0; i<correctAnswer.length; i++) {\n          if(userInput[currentQuestionIndex].includes(correctAnswer[i])) {\n            cnt ++;\n          }\n        }\n\n        if(cnt == maxNumberOfMultipleSelection) {\n          correct.push(currentQuestionIndex);\n          this.setState({\n            correctAnswer: true,\n            incorrectAnswer: false,\n            correct: correct,\n            showNextQuestionButton: true,\n            userAttempt: 1\n          })\n        } else {\n          incorrect.push(currentQuestionIndex)\n          this.setState({\n            incorrectAnswer: true,\n            correctAnswer: false,\n            incorrect: incorrect,\n            showNextQuestionButton: true,\n            userAttempt: 1\n          })\n        }\n      } else {\n        if(!showNextQuestionButton) {\n          this.setState({\n            userInput,\n            userAttempt: userAttempt + 1\n          })\n        }\n      }\n    }\n  }\n\n  nextQuestion = (currentQuestionIndex) => {\n    const { questions } = this.props;\n\n    var initState = {\n      incorrectAnswer: false,\n      correctAnswer: false,\n      showNextQuestionButton: false,\n      buttons: {},\n    }\n\n    if(currentQuestionIndex + 1 == questions.length) {\n      this.setState({\n        ...initState,\n        endQuiz: true\n      })\n    } else {\n      this.setState({\n        ...initState,\n        currentQuestionIndex: currentQuestionIndex + 1,\n      })\n    }\n  }\n\n  renderMessageforCorrectAnswer = (question) => {\n    const defaultMessage = 'You are correct. Please click Next to continue.';\n    return question.messageForCorrectAnswer || defaultMessage;\n  }\n\n  renderMessageforIncorrectAnswer = (question) => {\n    const defaultMessage = 'Incorrect answer. Please try again.';\n    return question.messageForIncorrectAnswer || defaultMessage;\n  }\n\n  renderExplanation = (question, isResultPage) => {\n    const explanation = question.explanation;\n    if(!explanation) {\n      return (null);\n    }\n    \n    if(isResultPage) {\n      return (\n        <div className=\"explaination\">\n          {explanation}\n        </div>\n      )\n    }\n\n    return (\n      <div>\n        <br/>\n        {explanation}\n      </div>\n    )\n  }\n\n  handleChange = (event) => {\n    this.setState({filteredValue: event.target.value});\n  }\n\n  renderQuizResultFilter = () => {\n    const { appLocale } = this.props;\n    return (\n      <div className=\"quiz-result-filter\">\n          <select value={this.state.filteredValue} onChange={this.handleChange}>\n            <option value=\"all\">{appLocale.resultFilterAll}</option>\n            <option value=\"correct\">{appLocale.resultFilterCorrect}</option>\n            <option value=\"incorrect\">{appLocale.resultFilterIncorrect}</option>\n          </select>\n      </div>\n    );\n  }\n\n  renderAnswerInResult = (question, userInputIndex) => {\n    const { answers, correctAnswer, questionType } = question;\n    let { answerSelectionType } = question;\n    let answerBtnCorrectClassName;\n    let answerBtnIncorrectClassName;\n\n    // Default single to avoid code breaking due to automatic version upgrade\n    answerSelectionType = answerSelectionType || 'single';\n\n    return answers.map( (answer, index) => {\n      if(answerSelectionType == 'single') {\n        answerBtnCorrectClassName = ( index+1 == correctAnswer ? ' correct ': '' )\n        answerBtnIncorrectClassName = (userInputIndex != correctAnswer && index + 1 == userInputIndex ? ' incorrect ' : '')\n      } else {\n        answerBtnCorrectClassName = ( correctAnswer.includes(index + 1)  ? ' correct ': '' )\n        answerBtnIncorrectClassName = ( !correctAnswer.includes(index + 1) && userInputIndex.includes(index + 1) ? ' incorrect ' : '')\n      }\n\n      return(\n        <div key={index}>\n           <button disabled={true} className={\"answerBtn btn \" + answerBtnCorrectClassName + answerBtnIncorrectClassName}>\n            { questionType == 'text' && <span>{ answer }</span> }\n            { questionType == 'photo' && <img src={ answer } /> }\n          </button>\n        </div>\n      )\n    });\n  }\n\n  renderQuizResultQuestions = () => {\n    const { filteredValue } = this.state;\n    let { userInput } = this.state;\n    let { questions } = this.props;\n\n    if(filteredValue != 'all') {\n      questions = questions.filter( (question, index) => {\n        return this.state[filteredValue].indexOf(index) != -1\n      })\n\n      userInput = userInput.filter( (input, index) => {\n        return this.state[filteredValue].indexOf(index) != -1\n      })\n    }\n\n    return questions.map((question, index) => {\n      const userInputIndex = userInput[index];\n\n      // Default single to avoid code breaking due to automatic version upgrade\n      let answerSelectionType = question.answerSelectionType || 'single';\n      \n      return (\n        <div className=\"result-answer-wrapper\" key={index+1}>\n\n        <h3 dangerouslySetInnerHTML={this.rawMarkup(`Q${question.questionIndex}: ${question.question}`)}/> \n        {question.questionPic && <img src={question.questionPic}/>}\n        {\n          this.renderTags(answerSelectionType, question.correctAnswer.length)\n        }\n        <div className=\"result-answer\">\n            {\n              this.renderAnswerInResult(question, userInputIndex)\n            }\n        </div>\n        {this.renderExplanation(question, true)}\n      </div>\n      )\n    })\n  }\n\n  rawMarkup = (data) => {\n    const sanitizer = dompurify.sanitize;\n    let rawMarkup = marked(sanitizer(data));\n    return { __html: rawMarkup };\n  }\n\n  renderAnswers = (question, buttons) => {\n    const { answers, correctAnswer, questionType } = question;\n    let { answerSelectionType } = question;\n    \n    // Default single to avoid code breaking due to automatic version upgrade\n    answerSelectionType = answerSelectionType || 'single';\n\n    return answers.map( (answer, index) => {\n      if(buttons[index] != undefined) {\n        return (\n          <button key={index} disabled={ buttons[index].disabled || false } className={`${buttons[index].className} answerBtn btn`}  onClick={() => this.checkAnswer(index+1, correctAnswer, answerSelectionType)}>\n            { questionType == 'text' && <span>{answer}</span> }\n            { questionType == 'photo' && <img src={answer} /> }\n          </button>\n        )\n      } else {\n        return (\n          <button key={index} onClick={() => this.checkAnswer(index+1, correctAnswer, answerSelectionType)} className=\"answerBtn btn\">\n          { questionType == 'text' && answer }\n          { questionType == 'photo' && <img src={answer}/> }\n          </button>\n        )\n      }\n    })\n  }\n\n  renderTags(answerSelectionType, numberOfSelection) {\n    const { \n      appLocale: {\n        singleSelectionTagText,\n        multipleSelectionTagText,\n        pickNumberOfSelection\n      } \n    } = this.props;\n\n    return (\n      <div className=\"tag-container\">\n        {\n          answerSelectionType == 'single' && <span className=\"single selection-tag\"> { singleSelectionTagText }</span>\n        }\n        {\n          answerSelectionType == 'multiple' && <span className=\"multiple selection-tag\"> { multipleSelectionTagText }</span>\n        }\n        <span className=\"number-of-selection\">{ pickNumberOfSelection.replace(\"<numberOfSelection>\", numberOfSelection) }</span>\n      </div>\n      )\n  }\n\n  render() {\n    const { questions, appLocale } = this.props;\n    const { \n      correct, \n      incorrect, \n      userInput, \n      currentQuestionIndex, \n      correctAnswer, \n      incorrectAnswer, \n      endQuiz, \n      showInstantFeedback, \n      buttons, \n      onComplete, \n      showNextQuestionButton, \n      showDefaultResult, \n      customResultPage\n    } = this.state;\n\n    let question = questions[currentQuestionIndex];\n    let totalPoints = 0;\n    let correctPoints = 0;\n\n    for(var i=0; i<questions.length; i++) {\n      let point = questions[i].point || 0;\n      if(typeof point === 'string' || point instanceof String) {\n        point = parseInt(point)\n      }\n\n      totalPoints = totalPoints + point;\n\n      if(correct.includes(i)) {\n        correctPoints = correctPoints + point;\n      }\n    }\n\n    const questionSummary = {\n      numberOfQuestions: questions.length,\n      numberOfCorrectAnswers: correct.length,\n      numberOfIncorrectAnswers: incorrect.length,\n      questions: questions,\n      userInput: userInput,\n      totalPoints: totalPoints,\n      correctPoints: correctPoints\n    };\n\n    let { answerSelectionType } = question;\n\n    // Default single to avoid code breaking due to automatic version upgrade\n    answerSelectionType = answerSelectionType || 'single';\n    \n    return (\n      <div className=\"questionWrapper\">\n        {!endQuiz &&\n          <div className=\"questionWrapperBody\">\n            <div className=\"questionModal\">\n              {incorrectAnswer && showInstantFeedback && \n                <div className=\"alert incorrect\">{ this.renderMessageforIncorrectAnswer(question) }</div>\n              }\n              { correctAnswer && showInstantFeedback && \n                <div className=\"alert correct\">\n                  { this.renderMessageforCorrectAnswer(question) } \n                  { this.renderExplanation(question, false) }\n                </div>\n              }\n            </div>\n            <div>{ appLocale.question } { currentQuestionIndex + 1 }:</div>\n            <h3 dangerouslySetInnerHTML={this.rawMarkup(question.question)}/> \n            {question.questionPic && <img src={question.questionPic}/>}\n            {\n              this.renderTags(answerSelectionType, question.correctAnswer.length)\n            }\n            {\n              this.renderAnswers(question, buttons)\n            }\n            { showNextQuestionButton &&\n              <div><button onClick={() => this.nextQuestion(currentQuestionIndex)} className=\"nextQuestionBtn btn\">{appLocale.nextQuestionBtn}</button></div>\n            }\n          </div>\n        }\n        { endQuiz && showDefaultResult && customResultPage == null &&\n            <div className=\"card-body\">\n            <h2>\n              {appLocale.resultPageHeaderText.replace(\"<correctIndexLength>\", correct.length).replace(\"<questionLength>\", questions.length) } \n            </h2>\n            <h2>\n              { appLocale.resultPagePoint.replace(\"<correctPoints>\", correctPoints).replace(\"<totalPoints>\", totalPoints) }\n            </h2>\n            <br/> \n              { this.renderQuizResultFilter() }\n              { this.renderQuizResultQuestions() }\n            </div>\n        }\n\n        {\n          endQuiz && onComplete != undefined &&\n             onComplete(questionSummary)\n        }\n\n        {\n          endQuiz && !showDefaultResult  && customResultPage != undefined &&\n             customResultPage(questionSummary)\n        }\n        </div>\n    );\n  }\n}\n\nCore.propTypes = {\n  questions: PropTypes.array,\n  showDefaultResult: PropTypes.bool,\n  onComplete: PropTypes.func,\n  customResultPage: PropTypes.func,\n  showInstantFeedback: PropTypes.bool,\n  continueTillCorrect: PropTypes.bool,\n  appLocale: PropTypes.object\n};\n\nexport default Core;","export const defaultLocale =  {\n    \"landingHeaderText\": \"<questionLength> Preguntas\",\n    \"question\": \"Pregunta\",\n    \"startQuizBtn\": \"Empieza Examen\",\n    \"resultFilterAll\": \"Todos\",\n    \"resultFilterCorrect\": \"Correcto\",\n    \"resultFilterIncorrect\": \"Incorrecto\",\n    \"nextQuestionBtn\": \"Siguiente Pregunta\",\n    \"resultPageHeaderText\": \"Haz completado el examen. Recivistes <correctIndexLength> fuera de <questionLength> preguntas.\",\n    \"resultPagePoint\": \"Calificaste <correctPoints> fuera de <totalPoints>.\",\n    \"singleSelectionTagText\": \"Single Selection\",\n    \"multipleSelectionTagText\": \"Multiple Selection\",\n    \"pickNumberOfSelection\": \"Pick <numberOfSelection>\"\n  } ","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Core from './Core';\nimport { defaultLocale } from './Locale';\nimport \"./styles.css\";\n\nclass Quiz extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      start: false,\n    }\n    this.start = this.start.bind(this);\n  }\n\n  start = () => {\n    this.setState({start: true})\n  }\n\n  shuffleQuestions = (questions) => {\n    for (let i = questions.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [questions[i], questions[j]] = [questions[j], questions[i]];\n    }\n    return questions;\n  }\n\n  validateQuiz = (quiz) => {\n    if(!quiz) {\n      console.error(\"Quiz object is required.\");\n      return false;\n    } \n\n    const { questions } = quiz;\n    if(!questions ) {\n      console.error(\"Field 'questions' is required.\");\n      return false;\n    }\n\n    for(var i=0; i<questions.length; i++) {\n      const { question, questionType, questionPic, answerSelectionType, answers, correctAnswer } = questions[i];\n      if(!question) {\n        console.error(\"Field 'question' is required.\");\n        return false;\n      }\n  \n      if(!questionType) {\n        console.error(\"Field 'questionType' is required.\");\n        return false;\n      } else {\n        if(questionType != 'text' && questionType != 'photo') {\n          console.error(\"The value of 'questionType' is either 'text' or 'photo'.\");\n          return false;\n        }\n      }\n  \n      if(!answers) {\n        console.error(\"Field 'answers' is required.\");\n        return false;\n      } else {\n        if(!Array.isArray(answers)) {\n          console.error(\"Field 'answers' has to be an Array\");\n          return false;\n        } \n      }\n  \n      if(!correctAnswer) {\n        console.error(\"Field 'correctAnswer' is required.\");\n        return false;\n      }\n  \n      if(!answerSelectionType) {\n        // Default single to avoid code breaking due to automatic version upgrade\n        console.warn(\"Field answerSelectionType should be defined since v0.3.0. Use single by default.\")\n        answerSelectionType = answerSelectionType || 'single'; \n      }\n  \n      if(answerSelectionType == 'single' && !(typeof answerSelectionType === 'string' || answerSelectionType   instanceof String) ) {\n        console.error(\"answerSelectionType is single but expecting String in the field correctAnswer\");\n        return false;\n      }\n  \n      if(answerSelectionType == 'multiple' && !Array.isArray(correctAnswer)) {\n        console.error(\"answerSelectionType is multiple but expecting Array in the field correctAnswer\");\n        return false;\n      }\n    }\n\n    return  true;\n  }\n\n  render() {\n    const { quiz, shuffle, showDefaultResult, onComplete, customResultPage, showInstantFeedback, continueTillCorrect } = this.props;\n\n\n    if(!this.validateQuiz(quiz)) {\n      return (null)\n    }\n\n    const appLocale = {\n      ...defaultLocale,\n      ...quiz.appLocale\n    };\n    \n    let questions = quiz.questions;\n      if(shuffle) {\n        questions = this.shuffleQuestions(questions);\n      }\n\n      questions = questions.map((question, index) => ({\n        ...question, \n        questionIndex : index + 1\n      }));\n\n      return (\n        <div className=\"react-quiz-container\">\n          {!this.state.start &&\n            <div>\n              <h2>{quiz.quizTitle}</h2>\n              <div> {appLocale.landingHeaderText.replace(\"<questionLength>\" , quiz.questions.length )}</div>\n              { quiz.quizSynopsis && \n                  <div className=\"quiz-synopsis\">\n                      {quiz.quizSynopsis}\n                  </div> \n              }\n              <div className=\"startQuizWrapper\">\n                <button onClick={() => this.start()} className=\"startQuizBtn btn\">{appLocale.startQuizBtn}</button>\n              </div>\n            </div>\n          }\n\n          {\n            this.state.start && <Core questions={questions} showDefaultResult={showDefaultResult} onComplete={onComplete} customResultPage={customResultPage} showInstantFeedback={showInstantFeedback} continueTillCorrect={continueTillCorrect} appLocale={appLocale}/>\n          }\n        </div>\n      );\n    }\n}\n\nQuiz.propTypes = {\n  quiz: PropTypes.object,\n  shuffle: PropTypes.bool,\n  showDefaultResult: PropTypes.bool,\n  onComplete: PropTypes.func,\n  customResultPage: PropTypes.func,\n  showInstantFeedback: PropTypes.bool,\n  continueTillCorrect: PropTypes.bool\n};\n\nexport default Quiz;","import React from 'react';\nimport { quiz } from './quiz';\nimport Quiz from '../../components/GreetingQuiz/Quiz';\n  \n// import React from \"react\";\n// import { render } from \"react-dom\";\n// import Quiz from \"../../lib/Quiz\";\n// import {quiz} from './quiz';\n\n/**\n * @author\n * @function Quiz\n */\n\nconst thing = () => {\n  return (\n      <Quiz quiz={quiz} shuffle={true} showInstantFeedback={true} continueTillCorrect={true}/>\n\n  );\n}\n\nexport default thing;","  \nexport const quiz2 =  {\n    \"quizTitle\": \"Examen de Personas\",\n    \"quizSynopsis\": \"Bienvenido a este examen. Toma tu tiempo y recuerda las cosas que haz aprendido. Buenas suerte!\",\n    \"questions\": [\n      {\n        \"question\": \"Como se dice, 'Tia/Tio' en Ingles?\",\n        \"questionType\": \"text\",\n        \"answerSelectionType\": \"single\",\n        \"answers\": [\n          \"Mother/Mom\",\n          \"Father/Dad\",\n          \"Nephew/Niece\",\n          \"Aunt/Uncle\"\n        ],\n        \"correctAnswer\": \"4\",\n        \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\n        \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\n        \"explanation\": \"Mother/mom significa Madre/mama. Father/Dad significa Padre/papa. Nephew/Niece significa sobrino/sobrina\",\n        \"point\": \"20\"\n      },\n      {\n        \"question\": \"Como se dice 'Primo/Prima' en Ingles?\",\n        \"questionType\": \"text\",\n        \"answerSelectionType\": \"single\",\n        \"answers\": [\n          \"Stranger\",\n          \"Boy\",\n          \"Cousin\",\n          \"Friend\"\n        ],\n        \"correctAnswer\": \"3\",\n        \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\n        \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\n        \"explanation\": \"Stranger significa extrano. Boy significa nino. Friend significa amigo/amiga\",\n        \"point\": \"20\"\n      },\n      {\n        \"question\": \"Como se dice 'Bisabuelos/bisabuela/bisabuelo' en Ingles?\",\n        \"questionType\": \"text\",\n        \"answerSelectionType\": \"single\",\n        \"answers\": [\n          \"Grandson/Granddaughter\",\n          \"Grandparents/Grandma/Grandpa\",\n          \"Great grandparents/great grandma/great grandpa\"\n        ],\n        \"correctAnswer\": \"1\",\n        \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\n        \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\n        \"explanation\": \"Grandson/Granddaughter significa nieto/nieta. Grandparents/Grandma/Grandpa significa abuelos/abuela/abuelo\",\n        \"point\": \"10\"\n      },\n      {\n        \"question\": \"Como se dice 'Neighbor' en Ingles?\",\n        \"questionType\": \"text\",\n        \"answerSelectionType\": \"single\",\n        \"answers\": [\n          \"Girl\",\n          \"Daughter\",\n          \"Vecino\"\n        ],\n        \"correctAnswer\": \"3\",\n        \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\n        \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\n        \"explanation\": \"Girl significa Nina, Daughter significa hija\",\n        \"point\": \"10\"\n      },\n      {\n        \"question\": \"Como se dice 'Esposa' en Ingles?\",\n        \"questionType\": \"text\",\n        \"answerSelectionType\": \"single\",\n        \"answers\": [\n          \"Husband\",\n          \"Wife\",\n          \"Son\",\n          \"Brothers\"\n        ],\n        \"correctAnswer\": \"2\",\n        \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\n        \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\n        \"explanation\": \"Husband significa esposo, Son significa hijo, brothers significa hermanos/hermanas\",\n        \"point\": \"10\"\n      }\n    ]\n  } \n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport marked from 'marked';\nimport dompurify from 'dompurify';\n\nclass Core extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      incorrectAnswer: false,\n      correctAnswer: false,\n      showNextQuestionButton: false,\n      endQuiz: false,\n      currentQuestionIndex: 0,\n      buttons: {},\n      buttonClasses: {},\n      correct: [],\n      incorrect: [],\n      userInput: [],\n      filteredValue: 'all',\n      userAttempt: 1,\n      showDefaultResult: this.props.showDefaultResult != undefined ? this.props.showDefaultResult : true,\n      onComplete: this.props.onComplete != undefined ? this.props.onComplete : null,\n      customResultPage: this.props.customResultPage != undefined ? this.props.customResultPage : null,\n      showInstantFeedback: this.props.showInstantFeedback != undefined ? this.props.showInstantFeedback : false,\n      continueTillCorrect: this.props.continueTillCorrect != undefined ? this.props.continueTillCorrect : false\n    };\n  }\n\n  checkAnswer = (index, correctAnswer, answerSelectionType) => {\n    const { correct, incorrect, currentQuestionIndex, continueTillCorrect, userInput } = this.state;\n    let { userAttempt, showNextQuestionButton } = this.state;\n\n    if(answerSelectionType == 'single') {\n      if(userInput[currentQuestionIndex] == undefined) {\n        userInput.push(index)\n      }\n  \n      if(index == correctAnswer) {\n        if( incorrect.indexOf(currentQuestionIndex) < 0 && correct.indexOf(currentQuestionIndex) < 0) {\n          correct.push(currentQuestionIndex);\n        }\n\n        let disabledAll = {\n          0: {disabled: true},\n          1: {disabled: true},\n          2: {disabled: true},\n          3: {disabled: true}\n        }\n  \n        this.setState((prevState) => {\n          const buttons = Object.assign(\n            {},\n            prevState.buttons,\n            {\n              ...disabledAll,\n              [index-1]: {\n                className: (index == correctAnswer)? \"correct\" : \"incorrect\"\n              },\n            }\n          );\n          return { buttons };\n        })\n  \n        this.setState({\n          correctAnswer: true,\n          incorrectAnswer: false,\n          correct: correct,\n          showNextQuestionButton: true,\n        })\n      } else {\n        if( correct.indexOf(currentQuestionIndex) < 0 && incorrect.indexOf(currentQuestionIndex) < 0 ) {\n          incorrect.push(currentQuestionIndex)\n        }\n  \n        if(continueTillCorrect) {\n          this.setState((prevState) => {\n            const buttons = Object.assign(\n              {},\n              prevState.buttons,\n              {\n                [index-1]: {\n                  disabled: !prevState.buttons[index-1]\n                }\n              }\n            );\n            return { buttons };\n          });\n        } else {\n          let disabledAll = {\n            0: {disabled: true},\n            1: {disabled: true},\n            2: {disabled: true},\n            3: {disabled: true}\n          }\n  \n          this.setState((prevState) => {\n            const buttons = Object.assign(\n              {},\n              prevState.buttons,\n              {\n                ...disabledAll,\n                [index-1]: {\n                  className: (index == correctAnswer)? \"correct\" : \"incorrect\"\n                },\n              }\n            );\n            return { buttons };\n          })\n  \n          this.setState({\n            showNextQuestionButton: true,\n          })\n        }\n  \n        this.setState({\n          incorrectAnswer: true,\n          correctAnswer: false,\n          incorrect: incorrect,\n        })\n      }\n    } else {\n      \n      let maxNumberOfMultipleSelection = correctAnswer.length;\n\n      if(userInput[currentQuestionIndex] == undefined) {\n        userInput[currentQuestionIndex] = []\n      }\n      \n      if(userInput[currentQuestionIndex].length < maxNumberOfMultipleSelection) {\n        userInput[currentQuestionIndex].push(index)\n\n        if(correctAnswer.includes(index)) {\n          if(userInput[currentQuestionIndex].length <= maxNumberOfMultipleSelection)  {\n          \n            this.setState((prevState) => {\n              const buttons = Object.assign(\n                {},\n                prevState.buttons,\n                {\n                  [index-1]: {\n                    disabled: !prevState.buttons[index-1],\n                    className: (correctAnswer.includes(index))? \"correct\" : \"incorrect\"\n                  },\n                }\n              );\n              return { buttons };\n            })\n  \n          \n          }\n        } else {\n          if(userInput[currentQuestionIndex].length <= maxNumberOfMultipleSelection)  { \n            this.setState((prevState) => {\n              const buttons = Object.assign(\n                {},\n                prevState.buttons,\n                {\n                  [index-1]: {\n                    className: (correctAnswer.includes(index))? \"correct\" : \"incorrect\"\n                  },\n                }\n              );\n              return { buttons };\n            })\n          }\n        }\n      }\n\n      if(maxNumberOfMultipleSelection == userAttempt) {\n        let cnt = 0;\n        for(var i=0; i<correctAnswer.length; i++) {\n          if(userInput[currentQuestionIndex].includes(correctAnswer[i])) {\n            cnt ++;\n          }\n        }\n\n        if(cnt == maxNumberOfMultipleSelection) {\n          correct.push(currentQuestionIndex);\n          this.setState({\n            correctAnswer: true,\n            incorrectAnswer: false,\n            correct: correct,\n            showNextQuestionButton: true,\n            userAttempt: 1\n          })\n        } else {\n          incorrect.push(currentQuestionIndex)\n          this.setState({\n            incorrectAnswer: true,\n            correctAnswer: false,\n            incorrect: incorrect,\n            showNextQuestionButton: true,\n            userAttempt: 1\n          })\n        }\n      } else {\n        if(!showNextQuestionButton) {\n          this.setState({\n            userInput,\n            userAttempt: userAttempt + 1\n          })\n        }\n      }\n    }\n  }\n\n  nextQuestion = (currentQuestionIndex) => {\n    const { questions } = this.props;\n\n    var initState = {\n      incorrectAnswer: false,\n      correctAnswer: false,\n      showNextQuestionButton: false,\n      buttons: {},\n    }\n\n    if(currentQuestionIndex + 1 == questions.length) {\n      this.setState({\n        ...initState,\n        endQuiz: true\n      })\n    } else {\n      this.setState({\n        ...initState,\n        currentQuestionIndex: currentQuestionIndex + 1,\n      })\n    }\n  }\n\n  renderMessageforCorrectAnswer = (question) => {\n    const defaultMessage = 'You are correct. Please click Next to continue.';\n    return question.messageForCorrectAnswer || defaultMessage;\n  }\n\n  renderMessageforIncorrectAnswer = (question) => {\n    const defaultMessage = 'Incorrect answer. Please try again.';\n    return question.messageForIncorrectAnswer || defaultMessage;\n  }\n\n  renderExplanation = (question, isResultPage) => {\n    const explanation = question.explanation;\n    if(!explanation) {\n      return (null);\n    }\n    \n    if(isResultPage) {\n      return (\n        <div className=\"explaination\">\n          {explanation}\n        </div>\n      )\n    }\n\n    return (\n      <div>\n        <br/>\n        {explanation}\n      </div>\n    )\n  }\n\n  handleChange = (event) => {\n    this.setState({filteredValue: event.target.value});\n  }\n\n  renderQuizResultFilter = () => {\n    const { appLocale } = this.props;\n    return (\n      <div className=\"quiz-result-filter\">\n          <select value={this.state.filteredValue} onChange={this.handleChange}>\n            <option value=\"all\">{appLocale.resultFilterAll}</option>\n            <option value=\"correct\">{appLocale.resultFilterCorrect}</option>\n            <option value=\"incorrect\">{appLocale.resultFilterIncorrect}</option>\n          </select>\n      </div>\n    );\n  }\n\n  renderAnswerInResult = (question, userInputIndex) => {\n    const { answers, correctAnswer, questionType } = question;\n    let { answerSelectionType } = question;\n    let answerBtnCorrectClassName;\n    let answerBtnIncorrectClassName;\n\n    // Default single to avoid code breaking due to automatic version upgrade\n    answerSelectionType = answerSelectionType || 'single';\n\n    return answers.map( (answer, index) => {\n      if(answerSelectionType == 'single') {\n        answerBtnCorrectClassName = ( index+1 == correctAnswer ? ' correct ': '' )\n        answerBtnIncorrectClassName = (userInputIndex != correctAnswer && index + 1 == userInputIndex ? ' incorrect ' : '')\n      } else {\n        answerBtnCorrectClassName = ( correctAnswer.includes(index + 1)  ? ' correct ': '' )\n        answerBtnIncorrectClassName = ( !correctAnswer.includes(index + 1) && userInputIndex.includes(index + 1) ? ' incorrect ' : '')\n      }\n\n      return(\n        <div key={index}>\n           <button disabled={true} className={\"answerBtn btn \" + answerBtnCorrectClassName + answerBtnIncorrectClassName}>\n            { questionType == 'text' && <span>{ answer }</span> }\n            { questionType == 'photo' && <img src={ answer } /> }\n          </button>\n        </div>\n      )\n    });\n  }\n\n  renderQuizResultQuestions = () => {\n    const { filteredValue } = this.state;\n    let { userInput } = this.state;\n    let { questions } = this.props;\n\n    if(filteredValue != 'all') {\n      questions = questions.filter( (question, index) => {\n        return this.state[filteredValue].indexOf(index) != -1\n      })\n\n      userInput = userInput.filter( (input, index) => {\n        return this.state[filteredValue].indexOf(index) != -1\n      })\n    }\n\n    return questions.map((question, index) => {\n      const userInputIndex = userInput[index];\n\n      // Default single to avoid code breaking due to automatic version upgrade\n      let answerSelectionType = question.answerSelectionType || 'single';\n      \n      return (\n        <div className=\"result-answer-wrapper\" key={index+1}>\n\n        <h3 dangerouslySetInnerHTML={this.rawMarkup(`Q${question.questionIndex}: ${question.question}`)}/> \n        {question.questionPic && <img src={question.questionPic}/>}\n        {\n          this.renderTags(answerSelectionType, question.correctAnswer.length)\n        }\n        <div className=\"result-answer\">\n            {\n              this.renderAnswerInResult(question, userInputIndex)\n            }\n        </div>\n        {this.renderExplanation(question, true)}\n      </div>\n      )\n    })\n  }\n\n  rawMarkup = (data) => {\n    const sanitizer = dompurify.sanitize;\n    let rawMarkup = marked(sanitizer(data));\n    return { __html: rawMarkup };\n  }\n\n  renderAnswers = (question, buttons) => {\n    const { answers, correctAnswer, questionType } = question;\n    let { answerSelectionType } = question;\n    \n    // Default single to avoid code breaking due to automatic version upgrade\n    answerSelectionType = answerSelectionType || 'single';\n\n    return answers.map( (answer, index) => {\n      if(buttons[index] != undefined) {\n        return (\n          <button key={index} disabled={ buttons[index].disabled || false } className={`${buttons[index].className} answerBtn btn`}  onClick={() => this.checkAnswer(index+1, correctAnswer, answerSelectionType)}>\n            { questionType == 'text' && <span>{answer}</span> }\n            { questionType == 'photo' && <img src={answer} /> }\n          </button>\n        )\n      } else {\n        return (\n          <button key={index} onClick={() => this.checkAnswer(index+1, correctAnswer, answerSelectionType)} className=\"answerBtn btn\">\n          { questionType == 'text' && answer }\n          { questionType == 'photo' && <img src={answer}/> }\n          </button>\n        )\n      }\n    })\n  }\n\n  renderTags(answerSelectionType, numberOfSelection) {\n    const { \n      appLocale: {\n        singleSelectionTagText,\n        multipleSelectionTagText,\n        pickNumberOfSelection\n      } \n    } = this.props;\n\n    return (\n      <div className=\"tag-container\">\n        {\n          answerSelectionType == 'single' && <span className=\"single selection-tag\"> { singleSelectionTagText }</span>\n        }\n        {\n          answerSelectionType == 'multiple' && <span className=\"multiple selection-tag\"> { multipleSelectionTagText }</span>\n        }\n        <span className=\"number-of-selection\">{ pickNumberOfSelection.replace(\"<numberOfSelection>\", numberOfSelection) }</span>\n      </div>\n      )\n  }\n\n  render() {\n    const { questions, appLocale } = this.props;\n    const { \n      correct, \n      incorrect, \n      userInput, \n      currentQuestionIndex, \n      correctAnswer, \n      incorrectAnswer, \n      endQuiz, \n      showInstantFeedback, \n      buttons, \n      onComplete, \n      showNextQuestionButton, \n      showDefaultResult, \n      customResultPage\n    } = this.state;\n\n    let question = questions[currentQuestionIndex];\n    let totalPoints = 0;\n    let correctPoints = 0;\n\n    for(var i=0; i<questions.length; i++) {\n      let point = questions[i].point || 0;\n      if(typeof point === 'string' || point instanceof String) {\n        point = parseInt(point)\n      }\n\n      totalPoints = totalPoints + point;\n\n      if(correct.includes(i)) {\n        correctPoints = correctPoints + point;\n      }\n    }\n\n    const questionSummary = {\n      numberOfQuestions: questions.length,\n      numberOfCorrectAnswers: correct.length,\n      numberOfIncorrectAnswers: incorrect.length,\n      questions: questions,\n      userInput: userInput,\n      totalPoints: totalPoints,\n      correctPoints: correctPoints\n    };\n\n    let { answerSelectionType } = question;\n\n    // Default single to avoid code breaking due to automatic version upgrade\n    answerSelectionType = answerSelectionType || 'single';\n    \n    return (\n      <div className=\"questionWrapper\">\n        {!endQuiz &&\n          <div className=\"questionWrapperBody\">\n            <div className=\"questionModal\">\n              {incorrectAnswer && showInstantFeedback && \n                <div className=\"alert incorrect\">{ this.renderMessageforIncorrectAnswer(question) }</div>\n              }\n              { correctAnswer && showInstantFeedback && \n                <div className=\"alert correct\">\n                  { this.renderMessageforCorrectAnswer(question) } \n                  { this.renderExplanation(question, false) }\n                </div>\n              }\n            </div>\n            <div>{ appLocale.question } { currentQuestionIndex + 1 }:</div>\n            <h3 dangerouslySetInnerHTML={this.rawMarkup(question.question)}/> \n            {question.questionPic && <img src={question.questionPic}/>}\n            {\n              this.renderTags(answerSelectionType, question.correctAnswer.length)\n            }\n            {\n              this.renderAnswers(question, buttons)\n            }\n            { showNextQuestionButton &&\n              <div><button onClick={() => this.nextQuestion(currentQuestionIndex)} className=\"nextQuestionBtn btn\">{appLocale.nextQuestionBtn}</button></div>\n            }\n          </div>\n        }\n        { endQuiz && showDefaultResult && customResultPage == null &&\n            <div className=\"card-body\">\n            <h2>\n              {appLocale.resultPageHeaderText.replace(\"<correctIndexLength>\", correct.length).replace(\"<questionLength>\", questions.length) } \n            </h2>\n            <h2>\n              { appLocale.resultPagePoint.replace(\"<correctPoints>\", correctPoints).replace(\"<totalPoints>\", totalPoints) }\n            </h2>\n            <br/> \n              { this.renderQuizResultFilter() }\n              { this.renderQuizResultQuestions() }\n            </div>\n        }\n\n        {\n          endQuiz && onComplete != undefined &&\n             onComplete(questionSummary)\n        }\n\n        {\n          endQuiz && !showDefaultResult  && customResultPage != undefined &&\n             customResultPage(questionSummary)\n        }\n        </div>\n    );\n  }\n}\n\nCore.propTypes = {\n  questions: PropTypes.array,\n  showDefaultResult: PropTypes.bool,\n  onComplete: PropTypes.func,\n  customResultPage: PropTypes.func,\n  showInstantFeedback: PropTypes.bool,\n  continueTillCorrect: PropTypes.bool,\n  appLocale: PropTypes.object\n};\n\nexport default Core;","export const defaultLocale =  {\n    \"landingHeaderText\": \"<questionLength> Preguntas\",\n    \"question\": \"Pregunta\",\n    \"startQuizBtn\": \"Empieza Examen\",\n    \"resultFilterAll\": \"Todos\",\n    \"resultFilterCorrect\": \"Correcto\",\n    \"resultFilterIncorrect\": \"Incorrecto\",\n    \"nextQuestionBtn\": \"Siguiente Pregunta\",\n    \"resultPageHeaderText\": \"Haz completado el examen. Recivistes <correctIndexLength> fuera de <questionLength> preguntas.\",\n    \"resultPagePoint\": \"Calificaste <correctPoints> fuera de <totalPoints>.\",\n    \"singleSelectionTagText\": \"Single Selection\",\n    \"multipleSelectionTagText\": \"Multiple Selection\",\n    \"pickNumberOfSelection\": \"Pick <numberOfSelection>\"\n  } ","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Core from './Core3';\nimport { defaultLocale } from './Locale3';\nimport \"./styles.css\";\n\nclass Quiz extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      start: false,\n    }\n    this.start = this.start.bind(this);\n  }\n\n  start = () => {\n    this.setState({start: true})\n  }\n\n  shuffleQuestions = (questions) => {\n    for (let i = questions.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [questions[i], questions[j]] = [questions[j], questions[i]];\n    }\n    return questions;\n  }\n\n  validateQuiz = (quiz) => {\n    if(!quiz) {\n      console.error(\"Quiz object is required.\");\n      return false;\n    } \n\n    const { questions } = quiz;\n    if(!questions ) {\n      console.error(\"Field 'questions' is required.\");\n      return false;\n    }\n\n    for(var i=0; i<questions.length; i++) {\n      const { question, questionType, questionPic, answerSelectionType, answers, correctAnswer } = questions[i];\n      if(!question) {\n        console.error(\"Field 'question' is required.\");\n        return false;\n      }\n  \n      if(!questionType) {\n        console.error(\"Field 'questionType' is required.\");\n        return false;\n      } else {\n        if(questionType != 'text' && questionType != 'photo') {\n          console.error(\"The value of 'questionType' is either 'text' or 'photo'.\");\n          return false;\n        }\n      }\n  \n      if(!answers) {\n        console.error(\"Field 'answers' is required.\");\n        return false;\n      } else {\n        if(!Array.isArray(answers)) {\n          console.error(\"Field 'answers' has to be an Array\");\n          return false;\n        } \n      }\n  \n      if(!correctAnswer) {\n        console.error(\"Field 'correctAnswer' is required.\");\n        return false;\n      }\n  \n      if(!answerSelectionType) {\n        // Default single to avoid code breaking due to automatic version upgrade\n        console.warn(\"Field answerSelectionType should be defined since v0.3.0. Use single by default.\")\n        answerSelectionType = answerSelectionType || 'single'; \n      }\n  \n      if(answerSelectionType == 'single' && !(typeof answerSelectionType === 'string' || answerSelectionType   instanceof String) ) {\n        console.error(\"answerSelectionType is single but expecting String in the field correctAnswer\");\n        return false;\n      }\n  \n      if(answerSelectionType == 'multiple' && !Array.isArray(correctAnswer)) {\n        console.error(\"answerSelectionType is multiple but expecting Array in the field correctAnswer\");\n        return false;\n      }\n    }\n\n    return  true;\n  }\n\n  render() {\n    const { quiz, shuffle, showDefaultResult, onComplete, customResultPage, showInstantFeedback, continueTillCorrect } = this.props;\n\n\n    if(!this.validateQuiz(quiz)) {\n      return (null)\n    }\n\n    const appLocale = {\n      ...defaultLocale,\n      ...quiz.appLocale\n    };\n    \n    let questions = quiz.questions;\n      if(shuffle) {\n        questions = this.shuffleQuestions(questions);\n      }\n\n      questions = questions.map((question, index) => ({\n        ...question, \n        questionIndex : index + 1\n      }));\n\n      return (\n        <div className=\"react-quiz-container\">\n          {!this.state.start &&\n            <div>\n              <h2>{quiz.quizTitle}</h2>\n              <div> {appLocale.landingHeaderText.replace(\"<questionLength>\" , quiz.questions.length )}</div>\n              { quiz.quizSynopsis && \n                  <div className=\"quiz-synopsis\">\n                      {quiz.quizSynopsis}\n                  </div> \n              }\n              <div className=\"startQuizWrapper\">\n                <button onClick={() => this.start()} className=\"startQuizBtn btn\">{appLocale.startQuizBtn}</button>\n              </div>\n            </div>\n          }\n\n          {\n            this.state.start && <Core questions={questions} showDefaultResult={showDefaultResult} onComplete={onComplete} customResultPage={customResultPage} showInstantFeedback={showInstantFeedback} continueTillCorrect={continueTillCorrect} appLocale={appLocale}/>\n          }\n        </div>\n      );\n    }\n}\n\nQuiz.propTypes = {\n  quiz: PropTypes.object,\n  shuffle: PropTypes.bool,\n  showDefaultResult: PropTypes.bool,\n  onComplete: PropTypes.func,\n  customResultPage: PropTypes.func,\n  showInstantFeedback: PropTypes.bool,\n  continueTillCorrect: PropTypes.bool\n};\n\nexport default Quiz;","import React from 'react';\nimport { quiz2 } from './quiz';\nimport Quiz from '../../components/PeopleQuiz/Quiz3';\n  \n// import React from \"react\";\n// import { render } from \"react-dom\";\n// import Quiz from \"../../lib/Quiz\";\n// import {quiz} from './quiz';\n\n/**\n * @author\n * @function Quiz\n */\n\nconst Quiz3 = () => {\n  return (\n      <Quiz quiz={quiz2} shuffle={true} showInstantFeedback={true} continueTillCorrect={true}/>\n\n  );\n}\n\nexport default Quiz3;","import React from 'react';\nimport { quiz1 } from './quiz';\nimport Quiz from '../../components/FoodQuiz/Quiz2';\nimport FoodNavbar from '../../components/FoodNavbar';\nimport { quiz6 } from './quiz';\nimport Quiz1 from '../../components/AlphabetQuiz/Quiz';\n\n\n/**\n * @author\n * @function Quiz\n */\n\nconst Quiz2 = props => {\n  return (\n    <section className=\"container\">\n\n      {/* <FoodNavbar {...props}/> */}\n      <Quiz1 quiz={quiz6} shuffle={true} showInstantFeedback={true} continueTillCorrect={true}/>\n    </section>\n  );\n}\n\nexport default Quiz2;","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Home from './containers/Home';\nimport Header from './components/Header';\nimport Hero from './components/Hero';\nimport {BrowserRouter as Router,Switch,Route} from 'react-router-dom';\nimport ContactUS from './containers/ContactUs';\nimport Post from './containers/Post';\nimport Greeting from './containers/Greeting';\nimport CommonPhrase from './containers/CommonPhrase';\nimport PhraseNav from './components/CommonPhraseNavbar';\nimport Food from './containers/Food';\nimport FoodNav from './components/FoodNavbar';\nimport People from './containers/People';\nimport PeopleNav from './components/PeopleNavbar';\n// import Quizes from './Quizes/index.js';\nimport PhraseQ from './containers/PhraseQ/index.js';\nimport allQs from './containers/AllQuizes';\nimport GreetingNav from './components/GreetingNavbar';\nimport AlphabetNav from './components/Sidebar';\nimport FoodQ from './containers/FoodQ/index.js';\nimport GreetingQ from './containers/GreetingQ/index.js';\nimport PeopleQ from './containers/PeopleQ/index.js';\nimport AlphabetQ from './containers/AlphabetQ/index.js';\n\n\nfunction App() {\n \n  return (\n    <Router>\n    <div className=\"App\">\n      {/* <Header/> */}\n      <Hero/>\n      <Route path=\"/\" exact component={Home}/>\n      <Route path=\"/contact-us\" component={ContactUS}/>\n      <Route path=\"/post/:postId\" component={Post}/>\n      <Route path=\"/post/\" component={AlphabetNav}/>\n      <Route path=\"/alphabetQuiz\" component={AlphabetQ}/>\n      <Route path=\"/greeting/:postId\" component={Greeting}/>\n      <Route path=\"/greeting/\" component={GreetingNav}/>\n      <Route path=\"/greetingQuiz\" component={GreetingQ}/>\n      <Route path=\"/commonphrase/:postId\" component={CommonPhrase}/>\n      <Route path=\"/commonphrase/\" component={ PhraseNav }/>\n      <Route path=\"/food/:postId\" component={Food}/>\n      <Route path=\"/food/\" component={FoodNav}/>\n      <Route path=\"/foodQuiz\" component={FoodQ}/>\n      <Route path=\"/people/:postId\" component={People}/>\n      <Route path=\"/people/\" component={ PeopleNav }/>\n      <Route path=\"/peopleQuiz\" component={ PeopleQ }/>\n      {/* <Route path=\"/quizes\" component={ Quizes } /> */}\n      <Route path=\"/commonphraseQuiz\" component={ PhraseQ } />\n      <Route path=\"/all-quizes\" component={ allQs } />\n\n\n{/* <Popup trigger={<button> Trigger</button>} position=\"right center\">\n    <div>Popup content here !!</div>\n  </Popup> */}\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}